
real clock_timer2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000113a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000005c  00800060  0000113a  000011ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000009  008000bc  008000bc  0000122a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000122a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001288  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000168  00000000  00000000  000012c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a1b  00000000  00000000  0000142c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aa8  00000000  00000000  00002e47  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e7c  00000000  00000000  000038ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002e0  00000000  00000000  0000476c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000555  00000000  00000000  00004a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001224  00000000  00000000  00004fa1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  000061c5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 de 00 	jmp	0x1bc	; 0x1bc <__ctors_end>
       4:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
       8:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
       c:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      10:	0c 94 94 05 	jmp	0xb28	; 0xb28 <__vector_4>
      14:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      18:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      1c:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      20:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      24:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      28:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      2c:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      30:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      34:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      38:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      3c:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      40:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      44:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      48:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      4c:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      50:	0c 94 fb 00 	jmp	0x1f6	; 0x1f6 <__bad_interrupt>
      54:	32 01       	movw	r6, r4
      56:	4b 01       	movw	r8, r22
      58:	64 01       	movw	r12, r8
      5a:	7d 01       	movw	r14, r26
      5c:	96 01       	movw	r18, r12
      5e:	96 01       	movw	r18, r12
      60:	96 01       	movw	r18, r12
      62:	96 01       	movw	r18, r12
      64:	96 01       	movw	r18, r12
      66:	96 01       	movw	r18, r12
      68:	96 01       	movw	r18, r12
      6a:	96 01       	movw	r18, r12
      6c:	96 01       	movw	r18, r12
      6e:	96 01       	movw	r18, r12
      70:	96 01       	movw	r18, r12
      72:	96 01       	movw	r18, r12
      74:	96 01       	movw	r18, r12
      76:	96 01       	movw	r18, r12
      78:	96 01       	movw	r18, r12
      7a:	96 01       	movw	r18, r12
      7c:	96 01       	movw	r18, r12
      7e:	96 01       	movw	r18, r12
      80:	96 01       	movw	r18, r12
      82:	96 01       	movw	r18, r12
      84:	96 01       	movw	r18, r12
      86:	96 01       	movw	r18, r12
      88:	96 01       	movw	r18, r12
      8a:	96 01       	movw	r18, r12
      8c:	96 01       	movw	r18, r12
      8e:	96 01       	movw	r18, r12
      90:	96 01       	movw	r18, r12
      92:	96 01       	movw	r18, r12
      94:	32 01       	movw	r6, r4
      96:	4b 01       	movw	r8, r22
      98:	64 01       	movw	r12, r8
      9a:	7d 01       	movw	r14, r26
      9c:	ab 01       	movw	r20, r22
      9e:	c4 01       	movw	r24, r8
      a0:	dd 01       	movw	r26, r26
      a2:	f6 01       	movw	r30, r12
      a4:	0f 02       	muls	r16, r31
      a6:	0f 02       	muls	r16, r31
      a8:	0f 02       	muls	r16, r31
      aa:	0f 02       	muls	r16, r31
      ac:	0f 02       	muls	r16, r31
      ae:	0f 02       	muls	r16, r31
      b0:	0f 02       	muls	r16, r31
      b2:	0f 02       	muls	r16, r31
      b4:	0f 02       	muls	r16, r31
      b6:	0f 02       	muls	r16, r31
      b8:	0f 02       	muls	r16, r31
      ba:	0f 02       	muls	r16, r31
      bc:	0f 02       	muls	r16, r31
      be:	0f 02       	muls	r16, r31
      c0:	0f 02       	muls	r16, r31
      c2:	0f 02       	muls	r16, r31
      c4:	0f 02       	muls	r16, r31
      c6:	0f 02       	muls	r16, r31
      c8:	0f 02       	muls	r16, r31
      ca:	0f 02       	muls	r16, r31
      cc:	0f 02       	muls	r16, r31
      ce:	0f 02       	muls	r16, r31
      d0:	0f 02       	muls	r16, r31
      d2:	0f 02       	muls	r16, r31
      d4:	0f 02       	muls	r16, r31
      d6:	0f 02       	muls	r16, r31
      d8:	0f 02       	muls	r16, r31
      da:	0f 02       	muls	r16, r31
      dc:	ab 01       	movw	r20, r22
      de:	c4 01       	movw	r24, r8
      e0:	dd 01       	movw	r26, r26
      e2:	f6 01       	movw	r30, r12
      e4:	24 02       	muls	r18, r20
      e6:	38 02       	muls	r19, r24
      e8:	4c 02       	muls	r20, r28
      ea:	60 02       	muls	r22, r16
      ec:	74 02       	muls	r23, r20
      ee:	74 02       	muls	r23, r20
      f0:	74 02       	muls	r23, r20
      f2:	74 02       	muls	r23, r20
      f4:	74 02       	muls	r23, r20
      f6:	74 02       	muls	r23, r20
      f8:	74 02       	muls	r23, r20
      fa:	74 02       	muls	r23, r20
      fc:	74 02       	muls	r23, r20
      fe:	74 02       	muls	r23, r20
     100:	74 02       	muls	r23, r20
     102:	74 02       	muls	r23, r20
     104:	74 02       	muls	r23, r20
     106:	74 02       	muls	r23, r20
     108:	74 02       	muls	r23, r20
     10a:	74 02       	muls	r23, r20
     10c:	74 02       	muls	r23, r20
     10e:	74 02       	muls	r23, r20
     110:	74 02       	muls	r23, r20
     112:	74 02       	muls	r23, r20
     114:	74 02       	muls	r23, r20
     116:	74 02       	muls	r23, r20
     118:	74 02       	muls	r23, r20
     11a:	74 02       	muls	r23, r20
     11c:	74 02       	muls	r23, r20
     11e:	74 02       	muls	r23, r20
     120:	74 02       	muls	r23, r20
     122:	74 02       	muls	r23, r20
     124:	24 02       	muls	r18, r20
     126:	38 02       	muls	r19, r24
     128:	4c 02       	muls	r20, r28
     12a:	60 02       	muls	r22, r16
     12c:	80 02       	muls	r24, r16
     12e:	82 02       	muls	r24, r18
     130:	84 02       	muls	r24, r20
     132:	86 02       	muls	r24, r22
     134:	88 02       	muls	r24, r24
     136:	88 02       	muls	r24, r24
     138:	88 02       	muls	r24, r24
     13a:	88 02       	muls	r24, r24
     13c:	88 02       	muls	r24, r24
     13e:	88 02       	muls	r24, r24
     140:	88 02       	muls	r24, r24
     142:	88 02       	muls	r24, r24
     144:	88 02       	muls	r24, r24
     146:	88 02       	muls	r24, r24
     148:	88 02       	muls	r24, r24
     14a:	88 02       	muls	r24, r24
     14c:	88 02       	muls	r24, r24
     14e:	88 02       	muls	r24, r24
     150:	88 02       	muls	r24, r24
     152:	88 02       	muls	r24, r24
     154:	88 02       	muls	r24, r24
     156:	88 02       	muls	r24, r24
     158:	88 02       	muls	r24, r24
     15a:	88 02       	muls	r24, r24
     15c:	88 02       	muls	r24, r24
     15e:	88 02       	muls	r24, r24
     160:	88 02       	muls	r24, r24
     162:	88 02       	muls	r24, r24
     164:	88 02       	muls	r24, r24
     166:	88 02       	muls	r24, r24
     168:	88 02       	muls	r24, r24
     16a:	88 02       	muls	r24, r24
     16c:	80 02       	muls	r24, r16
     16e:	82 02       	muls	r24, r18
     170:	84 02       	muls	r24, r20
     172:	86 02       	muls	r24, r22
     174:	9c 02       	muls	r25, r28
     176:	9e 02       	muls	r25, r30
     178:	a0 02       	muls	r26, r16
     17a:	a2 02       	muls	r26, r18
     17c:	a4 02       	muls	r26, r20
     17e:	a4 02       	muls	r26, r20
     180:	a4 02       	muls	r26, r20
     182:	a4 02       	muls	r26, r20
     184:	a4 02       	muls	r26, r20
     186:	a4 02       	muls	r26, r20
     188:	a4 02       	muls	r26, r20
     18a:	a4 02       	muls	r26, r20
     18c:	a4 02       	muls	r26, r20
     18e:	a4 02       	muls	r26, r20
     190:	a4 02       	muls	r26, r20
     192:	a4 02       	muls	r26, r20
     194:	a4 02       	muls	r26, r20
     196:	a4 02       	muls	r26, r20
     198:	a4 02       	muls	r26, r20
     19a:	a4 02       	muls	r26, r20
     19c:	a4 02       	muls	r26, r20
     19e:	a4 02       	muls	r26, r20
     1a0:	a4 02       	muls	r26, r20
     1a2:	a4 02       	muls	r26, r20
     1a4:	a4 02       	muls	r26, r20
     1a6:	a4 02       	muls	r26, r20
     1a8:	a4 02       	muls	r26, r20
     1aa:	a4 02       	muls	r26, r20
     1ac:	a4 02       	muls	r26, r20
     1ae:	a4 02       	muls	r26, r20
     1b0:	a4 02       	muls	r26, r20
     1b2:	a4 02       	muls	r26, r20
     1b4:	9c 02       	muls	r25, r28
     1b6:	9e 02       	muls	r25, r30
     1b8:	a0 02       	muls	r26, r16
     1ba:	a2 02       	muls	r26, r18

000001bc <__ctors_end>:
     1bc:	11 24       	eor	r1, r1
     1be:	1f be       	out	0x3f, r1	; 63
     1c0:	cf e5       	ldi	r28, 0x5F	; 95
     1c2:	d4 e0       	ldi	r29, 0x04	; 4
     1c4:	de bf       	out	0x3e, r29	; 62
     1c6:	cd bf       	out	0x3d, r28	; 61

000001c8 <__do_copy_data>:
     1c8:	10 e0       	ldi	r17, 0x00	; 0
     1ca:	a0 e6       	ldi	r26, 0x60	; 96
     1cc:	b0 e0       	ldi	r27, 0x00	; 0
     1ce:	ea e3       	ldi	r30, 0x3A	; 58
     1d0:	f1 e1       	ldi	r31, 0x11	; 17
     1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <__do_copy_data+0x10>
     1d4:	05 90       	lpm	r0, Z+
     1d6:	0d 92       	st	X+, r0
     1d8:	ac 3b       	cpi	r26, 0xBC	; 188
     1da:	b1 07       	cpc	r27, r17
     1dc:	d9 f7       	brne	.-10     	; 0x1d4 <__do_copy_data+0xc>

000001de <__do_clear_bss>:
     1de:	20 e0       	ldi	r18, 0x00	; 0
     1e0:	ac eb       	ldi	r26, 0xBC	; 188
     1e2:	b0 e0       	ldi	r27, 0x00	; 0
     1e4:	01 c0       	rjmp	.+2      	; 0x1e8 <.do_clear_bss_start>

000001e6 <.do_clear_bss_loop>:
     1e6:	1d 92       	st	X+, r1

000001e8 <.do_clear_bss_start>:
     1e8:	a5 3c       	cpi	r26, 0xC5	; 197
     1ea:	b2 07       	cpc	r27, r18
     1ec:	e1 f7       	brne	.-8      	; 0x1e6 <.do_clear_bss_loop>
     1ee:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <main>
     1f2:	0c 94 9b 08 	jmp	0x1136	; 0x1136 <_exit>

000001f6 <__bad_interrupt>:
     1f6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001fa <seven_seg_vinit>:
 */ 
#include "DIO.h"
#include "7SEGMENT.h"
void seven_seg_vinit(char port_name)
{
	dio_setport(port_name,0xff);
     1fa:	6f ef       	ldi	r22, 0xFF	; 255
     1fc:	0e 94 75 02 	call	0x4ea	; 0x4ea <dio_setport>
     200:	08 95       	ret

00000202 <seven_seg_write>:
}

void seven_seg_write(char portname,unsigned char number)
{
     202:	cf 93       	push	r28
     204:	df 93       	push	r29
     206:	cd b7       	in	r28, 0x3d	; 61
     208:	de b7       	in	r29, 0x3e	; 62
     20a:	2a 97       	sbiw	r28, 0x0a	; 10
     20c:	0f b6       	in	r0, 0x3f	; 63
     20e:	f8 94       	cli
     210:	de bf       	out	0x3e, r29	; 62
     212:	0f be       	out	0x3f, r0	; 63
     214:	cd bf       	out	0x3d, r28	; 61
	unsigned char arr[]={ 0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x47,0x7f,0x6f};
     216:	9a e0       	ldi	r25, 0x0A	; 10
     218:	e1 e6       	ldi	r30, 0x61	; 97
     21a:	f0 e0       	ldi	r31, 0x00	; 0
     21c:	de 01       	movw	r26, r28
     21e:	11 96       	adiw	r26, 0x01	; 1
     220:	01 90       	ld	r0, Z+
     222:	0d 92       	st	X+, r0
     224:	9a 95       	dec	r25
     226:	e1 f7       	brne	.-8      	; 0x220 <seven_seg_write+0x1e>
	dio_writeport(portname,arr[number]);
     228:	e1 e0       	ldi	r30, 0x01	; 1
     22a:	f0 e0       	ldi	r31, 0x00	; 0
     22c:	ec 0f       	add	r30, r28
     22e:	fd 1f       	adc	r31, r29
     230:	e6 0f       	add	r30, r22
     232:	f1 1d       	adc	r31, r1
     234:	60 81       	ld	r22, Z
     236:	0e 94 91 02 	call	0x522	; 0x522 <dio_writeport>
	
}
     23a:	2a 96       	adiw	r28, 0x0a	; 10
     23c:	0f b6       	in	r0, 0x3f	; 63
     23e:	f8 94       	cli
     240:	de bf       	out	0x3e, r29	; 62
     242:	0f be       	out	0x3f, r0	; 63
     244:	cd bf       	out	0x3d, r28	; 61
     246:	df 91       	pop	r29
     248:	cf 91       	pop	r28
     24a:	08 95       	ret

0000024c <dio_setpin>:
		case 'C':
		PORTC&=0xf0;
		PORTC|=value;
		case 'D':
		PORTD&=0xf0;
		PORTD|=value;
     24c:	90 e0       	ldi	r25, 0x00	; 0
     24e:	fc 01       	movw	r30, r24
     250:	e1 54       	subi	r30, 0x41	; 65
     252:	f1 09       	sbc	r31, r1
     254:	e4 32       	cpi	r30, 0x24	; 36
     256:	f1 05       	cpc	r31, r1
     258:	08 f0       	brcs	.+2      	; 0x25c <dio_setpin+0x10>
     25a:	68 c0       	rjmp	.+208    	; 0x32c <dio_setpin+0xe0>
     25c:	e6 5d       	subi	r30, 0xD6	; 214
     25e:	ff 4f       	sbci	r31, 0xFF	; 255
     260:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__tablejump2__>
     264:	44 23       	and	r20, r20
     266:	59 f0       	breq	.+22     	; 0x27e <dio_setpin+0x32>
     268:	2a b3       	in	r18, 0x1a	; 26
     26a:	81 e0       	ldi	r24, 0x01	; 1
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	02 c0       	rjmp	.+4      	; 0x274 <dio_setpin+0x28>
     270:	88 0f       	add	r24, r24
     272:	99 1f       	adc	r25, r25
     274:	6a 95       	dec	r22
     276:	e2 f7       	brpl	.-8      	; 0x270 <dio_setpin+0x24>
     278:	82 2b       	or	r24, r18
     27a:	8a bb       	out	0x1a, r24	; 26
     27c:	08 95       	ret
     27e:	2a b3       	in	r18, 0x1a	; 26
     280:	81 e0       	ldi	r24, 0x01	; 1
     282:	90 e0       	ldi	r25, 0x00	; 0
     284:	02 c0       	rjmp	.+4      	; 0x28a <dio_setpin+0x3e>
     286:	88 0f       	add	r24, r24
     288:	99 1f       	adc	r25, r25
     28a:	6a 95       	dec	r22
     28c:	e2 f7       	brpl	.-8      	; 0x286 <dio_setpin+0x3a>
     28e:	80 95       	com	r24
     290:	82 23       	and	r24, r18
     292:	8a bb       	out	0x1a, r24	; 26
     294:	08 95       	ret
     296:	44 23       	and	r20, r20
     298:	59 f0       	breq	.+22     	; 0x2b0 <dio_setpin+0x64>
     29a:	27 b3       	in	r18, 0x17	; 23
     29c:	81 e0       	ldi	r24, 0x01	; 1
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	02 c0       	rjmp	.+4      	; 0x2a6 <dio_setpin+0x5a>
     2a2:	88 0f       	add	r24, r24
     2a4:	99 1f       	adc	r25, r25
     2a6:	6a 95       	dec	r22
     2a8:	e2 f7       	brpl	.-8      	; 0x2a2 <dio_setpin+0x56>
     2aa:	82 2b       	or	r24, r18
     2ac:	87 bb       	out	0x17, r24	; 23
     2ae:	08 95       	ret
     2b0:	27 b3       	in	r18, 0x17	; 23
     2b2:	81 e0       	ldi	r24, 0x01	; 1
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	02 c0       	rjmp	.+4      	; 0x2bc <dio_setpin+0x70>
     2b8:	88 0f       	add	r24, r24
     2ba:	99 1f       	adc	r25, r25
     2bc:	6a 95       	dec	r22
     2be:	e2 f7       	brpl	.-8      	; 0x2b8 <dio_setpin+0x6c>
     2c0:	80 95       	com	r24
     2c2:	82 23       	and	r24, r18
     2c4:	87 bb       	out	0x17, r24	; 23
     2c6:	08 95       	ret
     2c8:	44 23       	and	r20, r20
     2ca:	59 f0       	breq	.+22     	; 0x2e2 <dio_setpin+0x96>
     2cc:	24 b3       	in	r18, 0x14	; 20
     2ce:	81 e0       	ldi	r24, 0x01	; 1
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	02 c0       	rjmp	.+4      	; 0x2d8 <dio_setpin+0x8c>
     2d4:	88 0f       	add	r24, r24
     2d6:	99 1f       	adc	r25, r25
     2d8:	6a 95       	dec	r22
     2da:	e2 f7       	brpl	.-8      	; 0x2d4 <dio_setpin+0x88>
     2dc:	82 2b       	or	r24, r18
     2de:	84 bb       	out	0x14, r24	; 20
     2e0:	08 95       	ret
     2e2:	24 b3       	in	r18, 0x14	; 20
     2e4:	81 e0       	ldi	r24, 0x01	; 1
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	02 c0       	rjmp	.+4      	; 0x2ee <dio_setpin+0xa2>
     2ea:	88 0f       	add	r24, r24
     2ec:	99 1f       	adc	r25, r25
     2ee:	6a 95       	dec	r22
     2f0:	e2 f7       	brpl	.-8      	; 0x2ea <dio_setpin+0x9e>
     2f2:	80 95       	com	r24
     2f4:	82 23       	and	r24, r18
     2f6:	84 bb       	out	0x14, r24	; 20
     2f8:	08 95       	ret
     2fa:	44 23       	and	r20, r20
     2fc:	59 f0       	breq	.+22     	; 0x314 <dio_setpin+0xc8>
     2fe:	21 b3       	in	r18, 0x11	; 17
     300:	81 e0       	ldi	r24, 0x01	; 1
     302:	90 e0       	ldi	r25, 0x00	; 0
     304:	02 c0       	rjmp	.+4      	; 0x30a <dio_setpin+0xbe>
     306:	88 0f       	add	r24, r24
     308:	99 1f       	adc	r25, r25
     30a:	6a 95       	dec	r22
     30c:	e2 f7       	brpl	.-8      	; 0x306 <dio_setpin+0xba>
     30e:	82 2b       	or	r24, r18
     310:	81 bb       	out	0x11, r24	; 17
     312:	08 95       	ret
     314:	21 b3       	in	r18, 0x11	; 17
     316:	81 e0       	ldi	r24, 0x01	; 1
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	02 c0       	rjmp	.+4      	; 0x320 <dio_setpin+0xd4>
     31c:	88 0f       	add	r24, r24
     31e:	99 1f       	adc	r25, r25
     320:	6a 95       	dec	r22
     322:	e2 f7       	brpl	.-8      	; 0x31c <dio_setpin+0xd0>
     324:	80 95       	com	r24
     326:	82 23       	and	r24, r18
     328:	81 bb       	out	0x11, r24	; 17
     32a:	08 95       	ret
     32c:	8b e7       	ldi	r24, 0x7B	; 123
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	9f 93       	push	r25
     332:	8f 93       	push	r24
     334:	0e 94 bd 05 	call	0xb7a	; 0xb7a <printf>
     338:	0f 90       	pop	r0
     33a:	0f 90       	pop	r0
     33c:	08 95       	ret

0000033e <dio_writepin>:
     33e:	90 e0       	ldi	r25, 0x00	; 0
     340:	fc 01       	movw	r30, r24
     342:	e1 54       	subi	r30, 0x41	; 65
     344:	f1 09       	sbc	r31, r1
     346:	e4 32       	cpi	r30, 0x24	; 36
     348:	f1 05       	cpc	r31, r1
     34a:	08 f0       	brcs	.+2      	; 0x34e <dio_writepin+0x10>
     34c:	68 c0       	rjmp	.+208    	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
     34e:	e2 5b       	subi	r30, 0xB2	; 178
     350:	ff 4f       	sbci	r31, 0xFF	; 255
     352:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__tablejump2__>
     356:	44 23       	and	r20, r20
     358:	59 f0       	breq	.+22     	; 0x370 <dio_writepin+0x32>
     35a:	2b b3       	in	r18, 0x1b	; 27
     35c:	81 e0       	ldi	r24, 0x01	; 1
     35e:	90 e0       	ldi	r25, 0x00	; 0
     360:	02 c0       	rjmp	.+4      	; 0x366 <dio_writepin+0x28>
     362:	88 0f       	add	r24, r24
     364:	99 1f       	adc	r25, r25
     366:	6a 95       	dec	r22
     368:	e2 f7       	brpl	.-8      	; 0x362 <dio_writepin+0x24>
     36a:	82 2b       	or	r24, r18
     36c:	8b bb       	out	0x1b, r24	; 27
     36e:	08 95       	ret
     370:	2b b3       	in	r18, 0x1b	; 27
     372:	81 e0       	ldi	r24, 0x01	; 1
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	02 c0       	rjmp	.+4      	; 0x37c <dio_writepin+0x3e>
     378:	88 0f       	add	r24, r24
     37a:	99 1f       	adc	r25, r25
     37c:	6a 95       	dec	r22
     37e:	e2 f7       	brpl	.-8      	; 0x378 <dio_writepin+0x3a>
     380:	80 95       	com	r24
     382:	82 23       	and	r24, r18
     384:	8b bb       	out	0x1b, r24	; 27
     386:	08 95       	ret
     388:	44 23       	and	r20, r20
     38a:	59 f0       	breq	.+22     	; 0x3a2 <dio_writepin+0x64>
     38c:	28 b3       	in	r18, 0x18	; 24
     38e:	81 e0       	ldi	r24, 0x01	; 1
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	02 c0       	rjmp	.+4      	; 0x398 <dio_writepin+0x5a>
     394:	88 0f       	add	r24, r24
     396:	99 1f       	adc	r25, r25
     398:	6a 95       	dec	r22
     39a:	e2 f7       	brpl	.-8      	; 0x394 <dio_writepin+0x56>
     39c:	82 2b       	or	r24, r18
     39e:	88 bb       	out	0x18, r24	; 24
     3a0:	08 95       	ret
     3a2:	28 b3       	in	r18, 0x18	; 24
     3a4:	81 e0       	ldi	r24, 0x01	; 1
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	02 c0       	rjmp	.+4      	; 0x3ae <dio_writepin+0x70>
     3aa:	88 0f       	add	r24, r24
     3ac:	99 1f       	adc	r25, r25
     3ae:	6a 95       	dec	r22
     3b0:	e2 f7       	brpl	.-8      	; 0x3aa <dio_writepin+0x6c>
     3b2:	80 95       	com	r24
     3b4:	82 23       	and	r24, r18
     3b6:	88 bb       	out	0x18, r24	; 24
     3b8:	08 95       	ret
     3ba:	44 23       	and	r20, r20
     3bc:	59 f0       	breq	.+22     	; 0x3d4 <dio_writepin+0x96>
     3be:	25 b3       	in	r18, 0x15	; 21
     3c0:	81 e0       	ldi	r24, 0x01	; 1
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	02 c0       	rjmp	.+4      	; 0x3ca <dio_writepin+0x8c>
     3c6:	88 0f       	add	r24, r24
     3c8:	99 1f       	adc	r25, r25
     3ca:	6a 95       	dec	r22
     3cc:	e2 f7       	brpl	.-8      	; 0x3c6 <dio_writepin+0x88>
     3ce:	82 2b       	or	r24, r18
     3d0:	85 bb       	out	0x15, r24	; 21
     3d2:	08 95       	ret
     3d4:	25 b3       	in	r18, 0x15	; 21
     3d6:	81 e0       	ldi	r24, 0x01	; 1
     3d8:	90 e0       	ldi	r25, 0x00	; 0
     3da:	02 c0       	rjmp	.+4      	; 0x3e0 <dio_writepin+0xa2>
     3dc:	88 0f       	add	r24, r24
     3de:	99 1f       	adc	r25, r25
     3e0:	6a 95       	dec	r22
     3e2:	e2 f7       	brpl	.-8      	; 0x3dc <dio_writepin+0x9e>
     3e4:	80 95       	com	r24
     3e6:	82 23       	and	r24, r18
     3e8:	85 bb       	out	0x15, r24	; 21
     3ea:	08 95       	ret
     3ec:	44 23       	and	r20, r20
     3ee:	59 f0       	breq	.+22     	; 0x406 <__DATA_REGION_LENGTH__+0x6>
     3f0:	22 b3       	in	r18, 0x12	; 18
     3f2:	81 e0       	ldi	r24, 0x01	; 1
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	02 c0       	rjmp	.+4      	; 0x3fc <dio_writepin+0xbe>
     3f8:	88 0f       	add	r24, r24
     3fa:	99 1f       	adc	r25, r25
     3fc:	6a 95       	dec	r22
     3fe:	e2 f7       	brpl	.-8      	; 0x3f8 <dio_writepin+0xba>
     400:	82 2b       	or	r24, r18
     402:	82 bb       	out	0x12, r24	; 18
     404:	08 95       	ret
     406:	22 b3       	in	r18, 0x12	; 18
     408:	81 e0       	ldi	r24, 0x01	; 1
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	02 c0       	rjmp	.+4      	; 0x412 <__DATA_REGION_LENGTH__+0x12>
     40e:	88 0f       	add	r24, r24
     410:	99 1f       	adc	r25, r25
     412:	6a 95       	dec	r22
     414:	e2 f7       	brpl	.-8      	; 0x40e <__DATA_REGION_LENGTH__+0xe>
     416:	80 95       	com	r24
     418:	82 23       	and	r24, r18
     41a:	82 bb       	out	0x12, r24	; 18
     41c:	08 95       	ret
     41e:	8b e7       	ldi	r24, 0x7B	; 123
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	9f 93       	push	r25
     424:	8f 93       	push	r24
     426:	0e 94 bd 05 	call	0xb7a	; 0xb7a <printf>
     42a:	0f 90       	pop	r0
     42c:	0f 90       	pop	r0
     42e:	08 95       	ret

00000430 <dio_readpin>:
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	fc 01       	movw	r30, r24
     434:	e1 54       	subi	r30, 0x41	; 65
     436:	f1 09       	sbc	r31, r1
     438:	e4 32       	cpi	r30, 0x24	; 36
     43a:	f1 05       	cpc	r31, r1
     43c:	08 f0       	brcs	.+2      	; 0x440 <dio_readpin+0x10>
     43e:	54 c0       	rjmp	.+168    	; 0x4e8 <__stack+0x89>
     440:	ee 58       	subi	r30, 0x8E	; 142
     442:	ff 4f       	sbci	r31, 0xFF	; 255
     444:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__tablejump2__>
     448:	49 b3       	in	r20, 0x19	; 25
     44a:	81 e0       	ldi	r24, 0x01	; 1
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	9c 01       	movw	r18, r24
     450:	06 2e       	mov	r0, r22
     452:	02 c0       	rjmp	.+4      	; 0x458 <dio_readpin+0x28>
     454:	22 0f       	add	r18, r18
     456:	33 1f       	adc	r19, r19
     458:	0a 94       	dec	r0
     45a:	e2 f7       	brpl	.-8      	; 0x454 <dio_readpin+0x24>
     45c:	84 2f       	mov	r24, r20
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	82 23       	and	r24, r18
     462:	93 23       	and	r25, r19
     464:	02 c0       	rjmp	.+4      	; 0x46a <__stack+0xb>
     466:	95 95       	asr	r25
     468:	87 95       	ror	r24
     46a:	6a 95       	dec	r22
     46c:	e2 f7       	brpl	.-8      	; 0x466 <__stack+0x7>
     46e:	08 95       	ret
     470:	46 b3       	in	r20, 0x16	; 22
     472:	81 e0       	ldi	r24, 0x01	; 1
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	9c 01       	movw	r18, r24
     478:	06 2e       	mov	r0, r22
     47a:	02 c0       	rjmp	.+4      	; 0x480 <__stack+0x21>
     47c:	22 0f       	add	r18, r18
     47e:	33 1f       	adc	r19, r19
     480:	0a 94       	dec	r0
     482:	e2 f7       	brpl	.-8      	; 0x47c <__stack+0x1d>
     484:	84 2f       	mov	r24, r20
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	82 23       	and	r24, r18
     48a:	93 23       	and	r25, r19
     48c:	02 c0       	rjmp	.+4      	; 0x492 <__stack+0x33>
     48e:	95 95       	asr	r25
     490:	87 95       	ror	r24
     492:	6a 95       	dec	r22
     494:	e2 f7       	brpl	.-8      	; 0x48e <__stack+0x2f>
     496:	08 95       	ret
     498:	43 b3       	in	r20, 0x13	; 19
     49a:	81 e0       	ldi	r24, 0x01	; 1
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	9c 01       	movw	r18, r24
     4a0:	06 2e       	mov	r0, r22
     4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <__stack+0x49>
     4a4:	22 0f       	add	r18, r18
     4a6:	33 1f       	adc	r19, r19
     4a8:	0a 94       	dec	r0
     4aa:	e2 f7       	brpl	.-8      	; 0x4a4 <__stack+0x45>
     4ac:	84 2f       	mov	r24, r20
     4ae:	90 e0       	ldi	r25, 0x00	; 0
     4b0:	82 23       	and	r24, r18
     4b2:	93 23       	and	r25, r19
     4b4:	02 c0       	rjmp	.+4      	; 0x4ba <__stack+0x5b>
     4b6:	95 95       	asr	r25
     4b8:	87 95       	ror	r24
     4ba:	6a 95       	dec	r22
     4bc:	e2 f7       	brpl	.-8      	; 0x4b6 <__stack+0x57>
     4be:	08 95       	ret
     4c0:	40 b3       	in	r20, 0x10	; 16
     4c2:	81 e0       	ldi	r24, 0x01	; 1
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	9c 01       	movw	r18, r24
     4c8:	06 2e       	mov	r0, r22
     4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <__stack+0x71>
     4cc:	22 0f       	add	r18, r18
     4ce:	33 1f       	adc	r19, r19
     4d0:	0a 94       	dec	r0
     4d2:	e2 f7       	brpl	.-8      	; 0x4cc <__stack+0x6d>
     4d4:	84 2f       	mov	r24, r20
     4d6:	90 e0       	ldi	r25, 0x00	; 0
     4d8:	82 23       	and	r24, r18
     4da:	93 23       	and	r25, r19
     4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <__stack+0x83>
     4de:	95 95       	asr	r25
     4e0:	87 95       	ror	r24
     4e2:	6a 95       	dec	r22
     4e4:	e2 f7       	brpl	.-8      	; 0x4de <__stack+0x7f>
     4e6:	08 95       	ret
     4e8:	08 95       	ret

000004ea <dio_setport>:
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	fc 01       	movw	r30, r24
     4ee:	e1 54       	subi	r30, 0x41	; 65
     4f0:	f1 09       	sbc	r31, r1
     4f2:	e4 32       	cpi	r30, 0x24	; 36
     4f4:	f1 05       	cpc	r31, r1
     4f6:	60 f4       	brcc	.+24     	; 0x510 <dio_setport+0x26>
     4f8:	ea 56       	subi	r30, 0x6A	; 106
     4fa:	ff 4f       	sbci	r31, 0xFF	; 255
     4fc:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__tablejump2__>
     500:	6a bb       	out	0x1a, r22	; 26
     502:	08 95       	ret
     504:	67 bb       	out	0x17, r22	; 23
     506:	08 95       	ret
     508:	64 bb       	out	0x14, r22	; 20
     50a:	08 95       	ret
     50c:	61 bb       	out	0x11, r22	; 17
     50e:	08 95       	ret
     510:	8b e7       	ldi	r24, 0x7B	; 123
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	9f 93       	push	r25
     516:	8f 93       	push	r24
     518:	0e 94 bd 05 	call	0xb7a	; 0xb7a <printf>
     51c:	0f 90       	pop	r0
     51e:	0f 90       	pop	r0
     520:	08 95       	ret

00000522 <dio_writeport>:
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	fc 01       	movw	r30, r24
     526:	e1 54       	subi	r30, 0x41	; 65
     528:	f1 09       	sbc	r31, r1
     52a:	e4 32       	cpi	r30, 0x24	; 36
     52c:	f1 05       	cpc	r31, r1
     52e:	60 f4       	brcc	.+24     	; 0x548 <dio_writeport+0x26>
     530:	e6 54       	subi	r30, 0x46	; 70
     532:	ff 4f       	sbci	r31, 0xFF	; 255
     534:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__tablejump2__>
     538:	6b bb       	out	0x1b, r22	; 27
     53a:	08 95       	ret
     53c:	68 bb       	out	0x18, r22	; 24
     53e:	08 95       	ret
     540:	65 bb       	out	0x15, r22	; 21
     542:	08 95       	ret
     544:	62 bb       	out	0x12, r22	; 18
     546:	08 95       	ret
     548:	8b e7       	ldi	r24, 0x7B	; 123
     54a:	90 e0       	ldi	r25, 0x00	; 0
     54c:	9f 93       	push	r25
     54e:	8f 93       	push	r24
     550:	0e 94 bd 05 	call	0xb7a	; 0xb7a <printf>
     554:	0f 90       	pop	r0
     556:	0f 90       	pop	r0
     558:	08 95       	ret

0000055a <write_high_nibble>:
	}
}

void write_high_nibble(unsigned char portname,unsigned char value)
{
	value<<=4;
     55a:	62 95       	swap	r22
     55c:	60 7f       	andi	r22, 0xF0	; 240
	switch(portname)
     55e:	82 34       	cpi	r24, 0x42	; 66
     560:	79 f0       	breq	.+30     	; 0x580 <write_high_nibble+0x26>
     562:	18 f4       	brcc	.+6      	; 0x56a <write_high_nibble+0x10>
     564:	81 34       	cpi	r24, 0x41	; 65
     566:	31 f0       	breq	.+12     	; 0x574 <write_high_nibble+0x1a>
     568:	08 95       	ret
     56a:	83 34       	cpi	r24, 0x43	; 67
     56c:	79 f0       	breq	.+30     	; 0x58c <write_high_nibble+0x32>
     56e:	84 34       	cpi	r24, 0x44	; 68
     570:	99 f0       	breq	.+38     	; 0x598 <write_high_nibble+0x3e>
     572:	08 95       	ret
	{
		case 'A':
		PORTA&=0x0f;
     574:	8b b3       	in	r24, 0x1b	; 27
     576:	8f 70       	andi	r24, 0x0F	; 15
     578:	8b bb       	out	0x1b, r24	; 27
		PORTA|=value;
     57a:	8b b3       	in	r24, 0x1b	; 27
     57c:	86 2b       	or	r24, r22
     57e:	8b bb       	out	0x1b, r24	; 27
		case 'B':
		PORTB&=0x0f;
     580:	88 b3       	in	r24, 0x18	; 24
     582:	8f 70       	andi	r24, 0x0F	; 15
     584:	88 bb       	out	0x18, r24	; 24
		PORTB|=value;
     586:	88 b3       	in	r24, 0x18	; 24
     588:	86 2b       	or	r24, r22
     58a:	88 bb       	out	0x18, r24	; 24
		case 'C':
		PORTC&=0x0f;
     58c:	85 b3       	in	r24, 0x15	; 21
     58e:	8f 70       	andi	r24, 0x0F	; 15
     590:	85 bb       	out	0x15, r24	; 21
		PORTC|=value;
     592:	85 b3       	in	r24, 0x15	; 21
     594:	86 2b       	or	r24, r22
     596:	85 bb       	out	0x15, r24	; 21
		case 'D':
		PORTD&=0x0f;
     598:	82 b3       	in	r24, 0x12	; 18
     59a:	8f 70       	andi	r24, 0x0F	; 15
     59c:	82 bb       	out	0x12, r24	; 18
		PORTD|=value;
     59e:	82 b3       	in	r24, 0x12	; 18
     5a0:	68 2b       	or	r22, r24
     5a2:	62 bb       	out	0x12, r22	; 18
     5a4:	08 95       	ret

000005a6 <keypad_vInit>:
 *  Author: Mohamed Zaghlol
 */ 
 #include "keypad_driver.h"
 void keypad_vInit()
 {
	 dio_setport('B',0X0F);
     5a6:	6f e0       	ldi	r22, 0x0F	; 15
     5a8:	82 e4       	ldi	r24, 0x42	; 66
     5aa:	0e 94 75 02 	call	0x4ea	; 0x4ea <dio_setport>
	dio_writeport('B',0XF0);	  
     5ae:	60 ef       	ldi	r22, 0xF0	; 240
     5b0:	82 e4       	ldi	r24, 0x42	; 66
     5b2:	0e 94 91 02 	call	0x522	; 0x522 <dio_writeport>
     5b6:	08 95       	ret

000005b8 <keypad_u8check_press>:
 }
 char keypad_u8check_press()
 {
     5b8:	ef 92       	push	r14
     5ba:	ff 92       	push	r15
     5bc:	0f 93       	push	r16
     5be:	1f 93       	push	r17
     5c0:	cf 93       	push	r28
     5c2:	df 93       	push	r29
     5c4:	cd b7       	in	r28, 0x3d	; 61
     5c6:	de b7       	in	r29, 0x3e	; 62
     5c8:	60 97       	sbiw	r28, 0x10	; 16
     5ca:	0f b6       	in	r0, 0x3f	; 63
     5cc:	f8 94       	cli
     5ce:	de bf       	out	0x3e, r29	; 62
     5d0:	0f be       	out	0x3f, r0	; 63
     5d2:	cd bf       	out	0x3d, r28	; 61
	 char arr[4][4]={{'7','8','9','/'},{'4','5','6','*'},{'1','2','3','-'},{'A','0','=','+'}};
     5d4:	80 e1       	ldi	r24, 0x10	; 16
     5d6:	eb e6       	ldi	r30, 0x6B	; 107
     5d8:	f0 e0       	ldi	r31, 0x00	; 0
     5da:	de 01       	movw	r26, r28
     5dc:	11 96       	adiw	r26, 0x01	; 1
     5de:	01 90       	ld	r0, Z+
     5e0:	0d 92       	st	X+, r0
     5e2:	8a 95       	dec	r24
     5e4:	e1 f7       	brne	.-8      	; 0x5de <keypad_u8check_press+0x26>
	 char row,coloumn,x;
	 char returnval=NOTPRESSED;
     5e6:	ee 24       	eor	r14, r14
     5e8:	ea 94       	dec	r14
	 for(row=0;row<4;row++)
     5ea:	f1 2c       	mov	r15, r1
     5ec:	39 c0       	rjmp	.+114    	; 0x660 <keypad_u8check_press+0xa8>
	 {
		 dio_writepin('B',0,1);
     5ee:	41 e0       	ldi	r20, 0x01	; 1
     5f0:	60 e0       	ldi	r22, 0x00	; 0
     5f2:	82 e4       	ldi	r24, 0x42	; 66
     5f4:	0e 94 9f 01 	call	0x33e	; 0x33e <dio_writepin>
		 dio_writepin('B',1,1);
     5f8:	41 e0       	ldi	r20, 0x01	; 1
     5fa:	61 e0       	ldi	r22, 0x01	; 1
     5fc:	82 e4       	ldi	r24, 0x42	; 66
     5fe:	0e 94 9f 01 	call	0x33e	; 0x33e <dio_writepin>
		 dio_writepin('B',2,1);
     602:	41 e0       	ldi	r20, 0x01	; 1
     604:	62 e0       	ldi	r22, 0x02	; 2
     606:	82 e4       	ldi	r24, 0x42	; 66
     608:	0e 94 9f 01 	call	0x33e	; 0x33e <dio_writepin>
		 dio_writepin('B',3,1);
     60c:	41 e0       	ldi	r20, 0x01	; 1
     60e:	63 e0       	ldi	r22, 0x03	; 3
     610:	82 e4       	ldi	r24, 0x42	; 66
     612:	0e 94 9f 01 	call	0x33e	; 0x33e <dio_writepin>
		 dio_writepin('B',row,0);
     616:	40 e0       	ldi	r20, 0x00	; 0
     618:	6f 2d       	mov	r22, r15
     61a:	82 e4       	ldi	r24, 0x42	; 66
     61c:	0e 94 9f 01 	call	0x33e	; 0x33e <dio_writepin>
		 
		 for(coloumn=0;coloumn<4;coloumn++)
     620:	10 e0       	ldi	r17, 0x00	; 0
     622:	19 c0       	rjmp	.+50     	; 0x656 <keypad_u8check_press+0x9e>
		 {
			 x=dio_readpin('B',(coloumn+4));
     624:	64 e0       	ldi	r22, 0x04	; 4
     626:	61 0f       	add	r22, r17
     628:	82 e4       	ldi	r24, 0x42	; 66
     62a:	0e 94 18 02 	call	0x430	; 0x430 <dio_readpin>
     62e:	08 2f       	mov	r16, r24
			 if(x==0)
     630:	81 11       	cpse	r24, r1
     632:	10 c0       	rjmp	.+32     	; 0x654 <keypad_u8check_press+0x9c>
			 {
				 returnval=arr[row][coloumn];
     634:	ef 2d       	mov	r30, r15
     636:	f0 e0       	ldi	r31, 0x00	; 0
     638:	ee 0f       	add	r30, r30
     63a:	ff 1f       	adc	r31, r31
     63c:	ee 0f       	add	r30, r30
     63e:	ff 1f       	adc	r31, r31
     640:	81 e0       	ldi	r24, 0x01	; 1
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	8c 0f       	add	r24, r28
     646:	9d 1f       	adc	r25, r29
     648:	e8 0f       	add	r30, r24
     64a:	f9 1f       	adc	r31, r25
     64c:	e1 0f       	add	r30, r17
     64e:	f1 1d       	adc	r31, r1
     650:	e0 80       	ld	r14, Z
				 break;
     652:	03 c0       	rjmp	.+6      	; 0x65a <keypad_u8check_press+0xa2>
		 dio_writepin('B',1,1);
		 dio_writepin('B',2,1);
		 dio_writepin('B',3,1);
		 dio_writepin('B',row,0);
		 
		 for(coloumn=0;coloumn<4;coloumn++)
     654:	1f 5f       	subi	r17, 0xFF	; 255
     656:	14 30       	cpi	r17, 0x04	; 4
     658:	28 f3       	brcs	.-54     	; 0x624 <keypad_u8check_press+0x6c>
			 {
				 returnval=arr[row][coloumn];
				 break;
			 }
		 }
		 if(x==0)
     65a:	00 23       	and	r16, r16
     65c:	21 f0       	breq	.+8      	; 0x666 <keypad_u8check_press+0xae>
 char keypad_u8check_press()
 {
	 char arr[4][4]={{'7','8','9','/'},{'4','5','6','*'},{'1','2','3','-'},{'A','0','=','+'}};
	 char row,coloumn,x;
	 char returnval=NOTPRESSED;
	 for(row=0;row<4;row++)
     65e:	f3 94       	inc	r15
     660:	93 e0       	ldi	r25, 0x03	; 3
     662:	9f 15       	cp	r25, r15
     664:	20 f6       	brcc	.-120    	; 0x5ee <keypad_u8check_press+0x36>
		 {
			 break;
		 }
	 }
	 return returnval ;	 
     666:	8e 2d       	mov	r24, r14
     668:	60 96       	adiw	r28, 0x10	; 16
     66a:	0f b6       	in	r0, 0x3f	; 63
     66c:	f8 94       	cli
     66e:	de bf       	out	0x3e, r29	; 62
     670:	0f be       	out	0x3f, r0	; 63
     672:	cd bf       	out	0x3d, r28	; 61
     674:	df 91       	pop	r29
     676:	cf 91       	pop	r28
     678:	1f 91       	pop	r17
     67a:	0f 91       	pop	r16
     67c:	ff 90       	pop	r15
     67e:	ef 90       	pop	r14
     680:	08 95       	ret

00000682 <enable>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     682:	41 e0       	ldi	r20, 0x01	; 1
     684:	60 e0       	ldi	r22, 0x00	; 0
     686:	81 e4       	ldi	r24, 0x41	; 65
     688:	0e 94 9f 01 	call	0x33e	; 0x33e <dio_writepin>
     68c:	8f e9       	ldi	r24, 0x9F	; 159
     68e:	9f e0       	ldi	r25, 0x0F	; 15
     690:	01 97       	sbiw	r24, 0x01	; 1
     692:	f1 f7       	brne	.-4      	; 0x690 <enable+0xe>
     694:	00 c0       	rjmp	.+0      	; 0x696 <enable+0x14>
     696:	00 00       	nop
     698:	40 e0       	ldi	r20, 0x00	; 0
     69a:	60 e0       	ldi	r22, 0x00	; 0
     69c:	81 e4       	ldi	r24, 0x41	; 65
     69e:	0e 94 9f 01 	call	0x33e	; 0x33e <dio_writepin>
     6a2:	8f e9       	ldi	r24, 0x9F	; 159
     6a4:	9f e0       	ldi	r25, 0x0F	; 15
     6a6:	01 97       	sbiw	r24, 0x01	; 1
     6a8:	f1 f7       	brne	.-4      	; 0x6a6 <enable+0x24>
     6aa:	00 c0       	rjmp	.+0      	; 0x6ac <enable+0x2a>
     6ac:	00 00       	nop
     6ae:	08 95       	ret

000006b0 <lcd_cmd>:
     6b0:	cf 93       	push	r28
     6b2:	c8 2f       	mov	r28, r24
     6b4:	68 2f       	mov	r22, r24
     6b6:	62 95       	swap	r22
     6b8:	6f 70       	andi	r22, 0x0F	; 15
     6ba:	81 e4       	ldi	r24, 0x41	; 65
     6bc:	0e 94 ad 02 	call	0x55a	; 0x55a <write_high_nibble>
     6c0:	40 e0       	ldi	r20, 0x00	; 0
     6c2:	61 e0       	ldi	r22, 0x01	; 1
     6c4:	81 e4       	ldi	r24, 0x41	; 65
     6c6:	0e 94 9f 01 	call	0x33e	; 0x33e <dio_writepin>
     6ca:	0e 94 41 03 	call	0x682	; 0x682 <enable>
     6ce:	6c 2f       	mov	r22, r28
     6d0:	81 e4       	ldi	r24, 0x41	; 65
     6d2:	0e 94 ad 02 	call	0x55a	; 0x55a <write_high_nibble>
     6d6:	40 e0       	ldi	r20, 0x00	; 0
     6d8:	61 e0       	ldi	r22, 0x01	; 1
     6da:	81 e4       	ldi	r24, 0x41	; 65
     6dc:	0e 94 9f 01 	call	0x33e	; 0x33e <dio_writepin>
     6e0:	0e 94 41 03 	call	0x682	; 0x682 <enable>
     6e4:	8f ec       	ldi	r24, 0xCF	; 207
     6e6:	97 e0       	ldi	r25, 0x07	; 7
     6e8:	01 97       	sbiw	r24, 0x01	; 1
     6ea:	f1 f7       	brne	.-4      	; 0x6e8 <lcd_cmd+0x38>
     6ec:	00 c0       	rjmp	.+0      	; 0x6ee <lcd_cmd+0x3e>
     6ee:	00 00       	nop
     6f0:	cf 91       	pop	r28
     6f2:	08 95       	ret

000006f4 <lcd_init>:
     6f4:	41 e0       	ldi	r20, 0x01	; 1
     6f6:	64 e0       	ldi	r22, 0x04	; 4
     6f8:	81 e4       	ldi	r24, 0x41	; 65
     6fa:	0e 94 26 01 	call	0x24c	; 0x24c <dio_setpin>
     6fe:	41 e0       	ldi	r20, 0x01	; 1
     700:	65 e0       	ldi	r22, 0x05	; 5
     702:	81 e4       	ldi	r24, 0x41	; 65
     704:	0e 94 26 01 	call	0x24c	; 0x24c <dio_setpin>
     708:	41 e0       	ldi	r20, 0x01	; 1
     70a:	66 e0       	ldi	r22, 0x06	; 6
     70c:	81 e4       	ldi	r24, 0x41	; 65
     70e:	0e 94 26 01 	call	0x24c	; 0x24c <dio_setpin>
     712:	41 e0       	ldi	r20, 0x01	; 1
     714:	67 e0       	ldi	r22, 0x07	; 7
     716:	81 e4       	ldi	r24, 0x41	; 65
     718:	0e 94 26 01 	call	0x24c	; 0x24c <dio_setpin>
     71c:	41 e0       	ldi	r20, 0x01	; 1
     71e:	60 e0       	ldi	r22, 0x00	; 0
     720:	81 e4       	ldi	r24, 0x41	; 65
     722:	0e 94 26 01 	call	0x24c	; 0x24c <dio_setpin>
     726:	41 e0       	ldi	r20, 0x01	; 1
     728:	61 e0       	ldi	r22, 0x01	; 1
     72a:	81 e4       	ldi	r24, 0x41	; 65
     72c:	0e 94 26 01 	call	0x24c	; 0x24c <dio_setpin>
     730:	40 e0       	ldi	r20, 0x00	; 0
     732:	61 e0       	ldi	r22, 0x01	; 1
     734:	81 e4       	ldi	r24, 0x41	; 65
     736:	0e 94 9f 01 	call	0x33e	; 0x33e <dio_writepin>
     73a:	82 e0       	ldi	r24, 0x02	; 2
     73c:	0e 94 58 03 	call	0x6b0	; 0x6b0 <lcd_cmd>
     740:	8f e9       	ldi	r24, 0x9F	; 159
     742:	9f e0       	ldi	r25, 0x0F	; 15
     744:	01 97       	sbiw	r24, 0x01	; 1
     746:	f1 f7       	brne	.-4      	; 0x744 <lcd_init+0x50>
     748:	00 c0       	rjmp	.+0      	; 0x74a <lcd_init+0x56>
     74a:	00 00       	nop
     74c:	88 e2       	ldi	r24, 0x28	; 40
     74e:	0e 94 58 03 	call	0x6b0	; 0x6b0 <lcd_cmd>
     752:	8f e9       	ldi	r24, 0x9F	; 159
     754:	9f e0       	ldi	r25, 0x0F	; 15
     756:	01 97       	sbiw	r24, 0x01	; 1
     758:	f1 f7       	brne	.-4      	; 0x756 <lcd_init+0x62>
     75a:	00 c0       	rjmp	.+0      	; 0x75c <lcd_init+0x68>
     75c:	00 00       	nop
     75e:	8e e0       	ldi	r24, 0x0E	; 14
     760:	0e 94 58 03 	call	0x6b0	; 0x6b0 <lcd_cmd>
     764:	8f e9       	ldi	r24, 0x9F	; 159
     766:	9f e0       	ldi	r25, 0x0F	; 15
     768:	01 97       	sbiw	r24, 0x01	; 1
     76a:	f1 f7       	brne	.-4      	; 0x768 <lcd_init+0x74>
     76c:	00 c0       	rjmp	.+0      	; 0x76e <lcd_init+0x7a>
     76e:	00 00       	nop
     770:	81 e0       	ldi	r24, 0x01	; 1
     772:	0e 94 58 03 	call	0x6b0	; 0x6b0 <lcd_cmd>
     776:	8f e9       	ldi	r24, 0x9F	; 159
     778:	9f e0       	ldi	r25, 0x0F	; 15
     77a:	01 97       	sbiw	r24, 0x01	; 1
     77c:	f1 f7       	brne	.-4      	; 0x77a <lcd_init+0x86>
     77e:	00 c0       	rjmp	.+0      	; 0x780 <lcd_init+0x8c>
     780:	00 00       	nop
     782:	86 e0       	ldi	r24, 0x06	; 6
     784:	0e 94 58 03 	call	0x6b0	; 0x6b0 <lcd_cmd>
     788:	8f e9       	ldi	r24, 0x9F	; 159
     78a:	9f e0       	ldi	r25, 0x0F	; 15
     78c:	01 97       	sbiw	r24, 0x01	; 1
     78e:	f1 f7       	brne	.-4      	; 0x78c <lcd_init+0x98>
     790:	00 c0       	rjmp	.+0      	; 0x792 <lcd_init+0x9e>
     792:	00 00       	nop
     794:	08 95       	ret

00000796 <lcd_char>:
	}
	lcd_cmd(data);
	_delay_ms(1);
}
void lcd_char(char data)
{
     796:	cf 93       	push	r28
     798:	c8 2f       	mov	r28, r24
		PORTA=data;
		dio_writepin('A',1,1);
		enable();
		_delay_ms(1);
	#elif defined bitmode4
		write_high_nibble('A',data>>4);
     79a:	68 2f       	mov	r22, r24
     79c:	62 95       	swap	r22
     79e:	6f 70       	andi	r22, 0x0F	; 15
     7a0:	81 e4       	ldi	r24, 0x41	; 65
     7a2:	0e 94 ad 02 	call	0x55a	; 0x55a <write_high_nibble>
		dio_writepin('A',1,1);
     7a6:	41 e0       	ldi	r20, 0x01	; 1
     7a8:	61 e0       	ldi	r22, 0x01	; 1
     7aa:	81 e4       	ldi	r24, 0x41	; 65
     7ac:	0e 94 9f 01 	call	0x33e	; 0x33e <dio_writepin>
		enable();
     7b0:	0e 94 41 03 	call	0x682	; 0x682 <enable>
		write_high_nibble('A',data);
     7b4:	6c 2f       	mov	r22, r28
     7b6:	81 e4       	ldi	r24, 0x41	; 65
     7b8:	0e 94 ad 02 	call	0x55a	; 0x55a <write_high_nibble>
		dio_writepin('A',1,1);
     7bc:	41 e0       	ldi	r20, 0x01	; 1
     7be:	61 e0       	ldi	r22, 0x01	; 1
     7c0:	81 e4       	ldi	r24, 0x41	; 65
     7c2:	0e 94 9f 01 	call	0x33e	; 0x33e <dio_writepin>
		enable();
     7c6:	0e 94 41 03 	call	0x682	; 0x682 <enable>
     7ca:	8f ec       	ldi	r24, 0xCF	; 207
     7cc:	97 e0       	ldi	r25, 0x07	; 7
     7ce:	01 97       	sbiw	r24, 0x01	; 1
     7d0:	f1 f7       	brne	.-4      	; 0x7ce <lcd_char+0x38>
     7d2:	00 c0       	rjmp	.+0      	; 0x7d4 <lcd_char+0x3e>
     7d4:	00 00       	nop
		_delay_ms(1);
	#endif
}
     7d6:	cf 91       	pop	r28
     7d8:	08 95       	ret

000007da <lcd_string>:
void lcd_string(char * data)
{
     7da:	cf 93       	push	r28
     7dc:	df 93       	push	r29
     7de:	ec 01       	movw	r28, r24
	
	while(*data != '\0')
     7e0:	03 c0       	rjmp	.+6      	; 0x7e8 <lcd_string+0xe>
	{
		lcd_char(*data);
     7e2:	0e 94 cb 03 	call	0x796	; 0x796 <lcd_char>
		data++;
     7e6:	21 96       	adiw	r28, 0x01	; 1
	#endif
}
void lcd_string(char * data)
{
	
	while(*data != '\0')
     7e8:	88 81       	ld	r24, Y
     7ea:	81 11       	cpse	r24, r1
     7ec:	fa cf       	rjmp	.-12     	; 0x7e2 <lcd_string+0x8>
	{
		lcd_char(*data);
		data++;
	}
}
     7ee:	df 91       	pop	r29
     7f0:	cf 91       	pop	r28
     7f2:	08 95       	ret

000007f4 <main>:
volatile uint8_t second=0;
int8_t hours =0;
int8_t mint=0;
volatile char allow=1;
int main(void)
{
     7f4:	cf 93       	push	r28
     7f6:	df 93       	push	r29
     7f8:	00 d0       	rcall	.+0      	; 0x7fa <main+0x6>
     7fa:	00 d0       	rcall	.+0      	; 0x7fc <main+0x8>
     7fc:	00 d0       	rcall	.+0      	; 0x7fe <main+0xa>
     7fe:	cd b7       	in	r28, 0x3d	; 61
     800:	de b7       	in	r29, 0x3e	; 62
	DDRC = 0b00111111;
     802:	8f e3       	ldi	r24, 0x3F	; 63
     804:	84 bb       	out	0x14, r24	; 20
	keypad_vInit();
     806:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <keypad_vInit>
	seven_seg_vinit('D');
     80a:	84 e4       	ldi	r24, 0x44	; 68
     80c:	0e 94 fd 00 	call	0x1fa	; 0x1fa <seven_seg_vinit>
	timer2_ovf_init_();
     810:	0e 94 a9 05 	call	0xb52	; 0xb52 <timer2_ovf_init_>
	lcd_init();
     814:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <lcd_init>
	lcd_string("press 1 to set:");
     818:	8f e8       	ldi	r24, 0x8F	; 143
     81a:	90 e0       	ldi	r25, 0x00	; 0
     81c:	0e 94 ed 03 	call	0x7da	; 0x7da <lcd_string>
	char x,Y;
	int8_t date[6]={0,0,0,0,0,0};
     820:	fe 01       	movw	r30, r28
     822:	31 96       	adiw	r30, 0x01	; 1
     824:	86 e0       	ldi	r24, 0x06	; 6
     826:	df 01       	movw	r26, r30
     828:	1d 92       	st	X+, r1
     82a:	8a 95       	dec	r24
     82c:	e9 f7       	brne	.-6      	; 0x828 <main+0x34>
    while (1) 
    {
		x=keypad_u8check_press();
     82e:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <keypad_u8check_press>
		if (x!=NOTPRESSED)
     832:	8f 3f       	cpi	r24, 0xFF	; 255
     834:	09 f4       	brne	.+2      	; 0x838 <main+0x44>
     836:	f3 c0       	rjmp	.+486    	; 0xa1e <main+0x22a>
		{
			if(x=='1')
     838:	81 33       	cpi	r24, 0x31	; 49
     83a:	09 f0       	breq	.+2      	; 0x83e <main+0x4a>
     83c:	da c0       	rjmp	.+436    	; 0x9f2 <main+0x1fe>
			{
				allow=0;
     83e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
				PORTC=0b00111111;
     842:	8f e3       	ldi	r24, 0x3F	; 63
     844:	85 bb       	out	0x15, r24	; 21
     846:	bf e7       	ldi	r27, 0x7F	; 127
     848:	2a e1       	ldi	r18, 0x1A	; 26
     84a:	86 e0       	ldi	r24, 0x06	; 6
     84c:	b1 50       	subi	r27, 0x01	; 1
     84e:	20 40       	sbci	r18, 0x00	; 0
     850:	80 40       	sbci	r24, 0x00	; 0
     852:	e1 f7       	brne	.-8      	; 0x84c <main+0x58>
     854:	00 c0       	rjmp	.+0      	; 0x856 <main+0x62>
     856:	00 00       	nop
				_delay_ms(250);
				Y=NOTPRESSED;
				lcd_cmd(clearscreen);
     858:	81 e0       	ldi	r24, 0x01	; 1
     85a:	0e 94 58 03 	call	0x6b0	; 0x6b0 <lcd_cmd>
     85e:	af e4       	ldi	r26, 0x4F	; 79
     860:	b6 e4       	ldi	r27, 0x46	; 70
     862:	11 97       	sbiw	r26, 0x01	; 1
     864:	f1 f7       	brne	.-4      	; 0x862 <main+0x6e>
     866:	00 c0       	rjmp	.+0      	; 0x868 <main+0x74>
     868:	00 00       	nop
				_delay_ms(9);
				lcd_string("hours=");
     86a:	8f e9       	ldi	r24, 0x9F	; 159
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	0e 94 ed 03 	call	0x7da	; 0x7da <lcd_string>
			if(x=='1')
			{
				allow=0;
				PORTC=0b00111111;
				_delay_ms(250);
				Y=NOTPRESSED;
     872:	1f ef       	ldi	r17, 0xFF	; 255
				lcd_cmd(clearscreen);
				_delay_ms(9);
				lcd_string("hours=");
				while(Y==NOTPRESSED)
     874:	03 c0       	rjmp	.+6      	; 0x87c <main+0x88>
				{
					Y=keypad_u8check_press();
     876:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <keypad_u8check_press>
     87a:	18 2f       	mov	r17, r24
				_delay_ms(250);
				Y=NOTPRESSED;
				lcd_cmd(clearscreen);
				_delay_ms(9);
				lcd_string("hours=");
				while(Y==NOTPRESSED)
     87c:	1f 3f       	cpi	r17, 0xFF	; 255
     87e:	d9 f3       	breq	.-10     	; 0x876 <main+0x82>
				{
					Y=keypad_u8check_press();
				}
				lcd_char((char)Y);
     880:	81 2f       	mov	r24, r17
     882:	0e 94 cb 03 	call	0x796	; 0x796 <lcd_char>
     886:	bf e7       	ldi	r27, 0x7F	; 127
     888:	2a e1       	ldi	r18, 0x1A	; 26
     88a:	86 e0       	ldi	r24, 0x06	; 6
     88c:	b1 50       	subi	r27, 0x01	; 1
     88e:	20 40       	sbci	r18, 0x00	; 0
     890:	80 40       	sbci	r24, 0x00	; 0
     892:	e1 f7       	brne	.-8      	; 0x88c <main+0x98>
     894:	00 c0       	rjmp	.+0      	; 0x896 <main+0xa2>
     896:	00 00       	nop
				_delay_ms(250);
				hours=(Y-'0')*10;
     898:	81 2f       	mov	r24, r17
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	c0 97       	sbiw	r24, 0x30	; 48
     89e:	88 0f       	add	r24, r24
     8a0:	98 2f       	mov	r25, r24
     8a2:	99 0f       	add	r25, r25
     8a4:	99 0f       	add	r25, r25
     8a6:	89 0f       	add	r24, r25
     8a8:	80 93 bd 00 	sts	0x00BD, r24	; 0x8000bd <hours>
				Y=NOTPRESSED;
     8ac:	1f ef       	ldi	r17, 0xFF	; 255
				while(Y==NOTPRESSED)
     8ae:	03 c0       	rjmp	.+6      	; 0x8b6 <main+0xc2>
				{
					Y=keypad_u8check_press();
     8b0:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <keypad_u8check_press>
     8b4:	18 2f       	mov	r17, r24
				}
				lcd_char((char)Y);
				_delay_ms(250);
				hours=(Y-'0')*10;
				Y=NOTPRESSED;
				while(Y==NOTPRESSED)
     8b6:	1f 3f       	cpi	r17, 0xFF	; 255
     8b8:	d9 f3       	breq	.-10     	; 0x8b0 <main+0xbc>
				{
					Y=keypad_u8check_press();
				}
				lcd_char((char)Y);
     8ba:	81 2f       	mov	r24, r17
     8bc:	0e 94 cb 03 	call	0x796	; 0x796 <lcd_char>
     8c0:	9f e7       	ldi	r25, 0x7F	; 127
     8c2:	aa e1       	ldi	r26, 0x1A	; 26
     8c4:	b6 e0       	ldi	r27, 0x06	; 6
     8c6:	91 50       	subi	r25, 0x01	; 1
     8c8:	a0 40       	sbci	r26, 0x00	; 0
     8ca:	b0 40       	sbci	r27, 0x00	; 0
     8cc:	e1 f7       	brne	.-8      	; 0x8c6 <main+0xd2>
     8ce:	00 c0       	rjmp	.+0      	; 0x8d0 <main+0xdc>
     8d0:	00 00       	nop
				_delay_ms(250);
				hours+=(Y-'0');
     8d2:	80 91 bd 00 	lds	r24, 0x00BD	; 0x8000bd <hours>
     8d6:	18 0f       	add	r17, r24
     8d8:	10 53       	subi	r17, 0x30	; 48
     8da:	10 93 bd 00 	sts	0x00BD, r17	; 0x8000bd <hours>
				Y=NOTPRESSED;
				lcd_cmd(clearscreen);
     8de:	81 e0       	ldi	r24, 0x01	; 1
     8e0:	0e 94 58 03 	call	0x6b0	; 0x6b0 <lcd_cmd>
     8e4:	8f e4       	ldi	r24, 0x4F	; 79
     8e6:	96 e4       	ldi	r25, 0x46	; 70
     8e8:	01 97       	sbiw	r24, 0x01	; 1
     8ea:	f1 f7       	brne	.-4      	; 0x8e8 <main+0xf4>
     8ec:	00 c0       	rjmp	.+0      	; 0x8ee <main+0xfa>
     8ee:	00 00       	nop
				_delay_ms(9);
				lcd_string("min=");
     8f0:	86 ea       	ldi	r24, 0xA6	; 166
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	0e 94 ed 03 	call	0x7da	; 0x7da <lcd_string>
					Y=keypad_u8check_press();
				}
				lcd_char((char)Y);
				_delay_ms(250);
				hours+=(Y-'0');
				Y=NOTPRESSED;
     8f8:	1f ef       	ldi	r17, 0xFF	; 255
				lcd_cmd(clearscreen);
				_delay_ms(9);
				lcd_string("min=");
				while(Y==NOTPRESSED)
     8fa:	03 c0       	rjmp	.+6      	; 0x902 <main+0x10e>
				{
					Y=keypad_u8check_press();
     8fc:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <keypad_u8check_press>
     900:	18 2f       	mov	r17, r24
				hours+=(Y-'0');
				Y=NOTPRESSED;
				lcd_cmd(clearscreen);
				_delay_ms(9);
				lcd_string("min=");
				while(Y==NOTPRESSED)
     902:	1f 3f       	cpi	r17, 0xFF	; 255
     904:	d9 f3       	breq	.-10     	; 0x8fc <main+0x108>
				{
					Y=keypad_u8check_press();
				}
				lcd_char((char)Y);
     906:	81 2f       	mov	r24, r17
     908:	0e 94 cb 03 	call	0x796	; 0x796 <lcd_char>
     90c:	9f e7       	ldi	r25, 0x7F	; 127
     90e:	aa e1       	ldi	r26, 0x1A	; 26
     910:	b6 e0       	ldi	r27, 0x06	; 6
     912:	91 50       	subi	r25, 0x01	; 1
     914:	a0 40       	sbci	r26, 0x00	; 0
     916:	b0 40       	sbci	r27, 0x00	; 0
     918:	e1 f7       	brne	.-8      	; 0x912 <main+0x11e>
     91a:	00 c0       	rjmp	.+0      	; 0x91c <main+0x128>
     91c:	00 00       	nop
				_delay_ms(250);
				mint=(Y-'0')*10;
     91e:	81 2f       	mov	r24, r17
     920:	90 e0       	ldi	r25, 0x00	; 0
     922:	c0 97       	sbiw	r24, 0x30	; 48
     924:	88 0f       	add	r24, r24
     926:	98 2f       	mov	r25, r24
     928:	99 0f       	add	r25, r25
     92a:	99 0f       	add	r25, r25
     92c:	89 0f       	add	r24, r25
     92e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__data_end>
				Y=NOTPRESSED;
     932:	1f ef       	ldi	r17, 0xFF	; 255
				while(Y==NOTPRESSED)
     934:	03 c0       	rjmp	.+6      	; 0x93c <main+0x148>
				{
					Y=keypad_u8check_press();
     936:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <keypad_u8check_press>
     93a:	18 2f       	mov	r17, r24
				}
				lcd_char((char)Y);
				_delay_ms(250);
				mint=(Y-'0')*10;
				Y=NOTPRESSED;
				while(Y==NOTPRESSED)
     93c:	1f 3f       	cpi	r17, 0xFF	; 255
     93e:	d9 f3       	breq	.-10     	; 0x936 <main+0x142>
				{
					Y=keypad_u8check_press();
				}
				lcd_char((char)Y);
     940:	81 2f       	mov	r24, r17
     942:	0e 94 cb 03 	call	0x796	; 0x796 <lcd_char>
     946:	2f e7       	ldi	r18, 0x7F	; 127
     948:	8a e1       	ldi	r24, 0x1A	; 26
     94a:	96 e0       	ldi	r25, 0x06	; 6
     94c:	21 50       	subi	r18, 0x01	; 1
     94e:	80 40       	sbci	r24, 0x00	; 0
     950:	90 40       	sbci	r25, 0x00	; 0
     952:	e1 f7       	brne	.-8      	; 0x94c <main+0x158>
     954:	00 c0       	rjmp	.+0      	; 0x956 <main+0x162>
     956:	00 00       	nop
				_delay_ms(250);
				mint+=(Y-'0');
     958:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__data_end>
     95c:	18 0f       	add	r17, r24
     95e:	10 53       	subi	r17, 0x30	; 48
     960:	10 93 bc 00 	sts	0x00BC, r17	; 0x8000bc <__data_end>
				
				Y=NOTPRESSED;
				lcd_cmd(clearscreen);
     964:	81 e0       	ldi	r24, 0x01	; 1
     966:	0e 94 58 03 	call	0x6b0	; 0x6b0 <lcd_cmd>
     96a:	af e4       	ldi	r26, 0x4F	; 79
     96c:	b6 e4       	ldi	r27, 0x46	; 70
     96e:	11 97       	sbiw	r26, 0x01	; 1
     970:	f1 f7       	brne	.-4      	; 0x96e <main+0x17a>
     972:	00 c0       	rjmp	.+0      	; 0x974 <main+0x180>
     974:	00 00       	nop
				_delay_ms(9);
				lcd_string("sec=");
     976:	8b ea       	ldi	r24, 0xAB	; 171
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	0e 94 ed 03 	call	0x7da	; 0x7da <lcd_string>
				}
				lcd_char((char)Y);
				_delay_ms(250);
				mint+=(Y-'0');
				
				Y=NOTPRESSED;
     97e:	1f ef       	ldi	r17, 0xFF	; 255
				lcd_cmd(clearscreen);
				_delay_ms(9);
				lcd_string("sec=");
				while(Y==NOTPRESSED)
     980:	03 c0       	rjmp	.+6      	; 0x988 <main+0x194>
				{
					Y=keypad_u8check_press();
     982:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <keypad_u8check_press>
     986:	18 2f       	mov	r17, r24
				
				Y=NOTPRESSED;
				lcd_cmd(clearscreen);
				_delay_ms(9);
				lcd_string("sec=");
				while(Y==NOTPRESSED)
     988:	1f 3f       	cpi	r17, 0xFF	; 255
     98a:	d9 f3       	breq	.-10     	; 0x982 <main+0x18e>
				{
					Y=keypad_u8check_press();
				}
				lcd_char((char)Y);
     98c:	81 2f       	mov	r24, r17
     98e:	0e 94 cb 03 	call	0x796	; 0x796 <lcd_char>
     992:	bf e7       	ldi	r27, 0x7F	; 127
     994:	2a e1       	ldi	r18, 0x1A	; 26
     996:	86 e0       	ldi	r24, 0x06	; 6
     998:	b1 50       	subi	r27, 0x01	; 1
     99a:	20 40       	sbci	r18, 0x00	; 0
     99c:	80 40       	sbci	r24, 0x00	; 0
     99e:	e1 f7       	brne	.-8      	; 0x998 <main+0x1a4>
     9a0:	00 c0       	rjmp	.+0      	; 0x9a2 <main+0x1ae>
     9a2:	00 00       	nop
				_delay_ms(250);
				second=(Y-'0')*10;
     9a4:	81 2f       	mov	r24, r17
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	c0 97       	sbiw	r24, 0x30	; 48
     9aa:	88 0f       	add	r24, r24
     9ac:	98 2f       	mov	r25, r24
     9ae:	99 0f       	add	r25, r25
     9b0:	99 0f       	add	r25, r25
     9b2:	89 0f       	add	r24, r25
     9b4:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <second>
				Y=NOTPRESSED;
     9b8:	1f ef       	ldi	r17, 0xFF	; 255
				while(Y==NOTPRESSED)
     9ba:	03 c0       	rjmp	.+6      	; 0x9c2 <main+0x1ce>
				{
					Y=keypad_u8check_press();
     9bc:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <keypad_u8check_press>
     9c0:	18 2f       	mov	r17, r24
				}
				lcd_char((char)Y);
				_delay_ms(250);
				second=(Y-'0')*10;
				Y=NOTPRESSED;
				while(Y==NOTPRESSED)
     9c2:	1f 3f       	cpi	r17, 0xFF	; 255
     9c4:	d9 f3       	breq	.-10     	; 0x9bc <main+0x1c8>
				{
					Y=keypad_u8check_press();
				}
				lcd_char((char)Y);
     9c6:	81 2f       	mov	r24, r17
     9c8:	0e 94 cb 03 	call	0x796	; 0x796 <lcd_char>
     9cc:	9f e7       	ldi	r25, 0x7F	; 127
     9ce:	aa e1       	ldi	r26, 0x1A	; 26
     9d0:	b6 e0       	ldi	r27, 0x06	; 6
     9d2:	91 50       	subi	r25, 0x01	; 1
     9d4:	a0 40       	sbci	r26, 0x00	; 0
     9d6:	b0 40       	sbci	r27, 0x00	; 0
     9d8:	e1 f7       	brne	.-8      	; 0x9d2 <main+0x1de>
     9da:	00 c0       	rjmp	.+0      	; 0x9dc <main+0x1e8>
     9dc:	00 00       	nop
				_delay_ms(250);
				second+=(Y-'0');
     9de:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <second>
     9e2:	18 0f       	add	r17, r24
     9e4:	10 53       	subi	r17, 0x30	; 48
     9e6:	10 93 be 00 	sts	0x00BE, r17	; 0x8000be <second>
				allow=1;
     9ea:	81 e0       	ldi	r24, 0x01	; 1
     9ec:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
     9f0:	16 c0       	rjmp	.+44     	; 0xa1e <main+0x22a>
			}
			else
			{
				lcd_cmd(clearscreen);
     9f2:	81 e0       	ldi	r24, 0x01	; 1
     9f4:	0e 94 58 03 	call	0x6b0	; 0x6b0 <lcd_cmd>
     9f8:	8f e4       	ldi	r24, 0x4F	; 79
     9fa:	96 e4       	ldi	r25, 0x46	; 70
     9fc:	01 97       	sbiw	r24, 0x01	; 1
     9fe:	f1 f7       	brne	.-4      	; 0x9fc <main+0x208>
     a00:	00 c0       	rjmp	.+0      	; 0xa02 <main+0x20e>
     a02:	00 00       	nop
				_delay_ms(9);
				lcd_string("press wrong");
     a04:	80 eb       	ldi	r24, 0xB0	; 176
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	0e 94 ed 03 	call	0x7da	; 0x7da <lcd_string>
     a0c:	9f ef       	ldi	r25, 0xFF	; 255
     a0e:	a3 ed       	ldi	r26, 0xD3	; 211
     a10:	b0 e3       	ldi	r27, 0x30	; 48
     a12:	91 50       	subi	r25, 0x01	; 1
     a14:	a0 40       	sbci	r26, 0x00	; 0
     a16:	b0 40       	sbci	r27, 0x00	; 0
     a18:	e1 f7       	brne	.-8      	; 0xa12 <main+0x21e>
     a1a:	00 c0       	rjmp	.+0      	; 0xa1c <main+0x228>
     a1c:	00 00       	nop
				_delay_ms(2000);
			}
		}
		if (second>59)
     a1e:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <second>
     a22:	8c 33       	cpi	r24, 0x3C	; 60
     a24:	38 f0       	brcs	.+14     	; 0xa34 <main+0x240>
		{
			second=0;
     a26:	10 92 be 00 	sts	0x00BE, r1	; 0x8000be <second>
			mint++;
     a2a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__data_end>
     a2e:	8f 5f       	subi	r24, 0xFF	; 255
     a30:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__data_end>
		}
		if (mint>=60)
     a34:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__data_end>
     a38:	8c 33       	cpi	r24, 0x3C	; 60
     a3a:	3c f0       	brlt	.+14     	; 0xa4a <main+0x256>
		{
			mint=0;
     a3c:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <__data_end>
			hours++;
     a40:	80 91 bd 00 	lds	r24, 0x00BD	; 0x8000bd <hours>
     a44:	8f 5f       	subi	r24, 0xFF	; 255
     a46:	80 93 bd 00 	sts	0x00BD, r24	; 0x8000bd <hours>
		}
		if (hours>=24)
     a4a:	80 91 bd 00 	lds	r24, 0x00BD	; 0x8000bd <hours>
     a4e:	88 31       	cpi	r24, 0x18	; 24
     a50:	34 f0       	brlt	.+12     	; 0xa5e <main+0x26a>
		{
			hours=0;
     a52:	10 92 bd 00 	sts	0x00BD, r1	; 0x8000bd <hours>
			mint=0;
     a56:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <__data_end>
			second=0;
     a5a:	10 92 be 00 	sts	0x00BE, r1	; 0x8000be <second>
		}
		date[0]=second%10;
     a5e:	90 91 be 00 	lds	r25, 0x00BE	; 0x8000be <second>
     a62:	3d ec       	ldi	r19, 0xCD	; 205
     a64:	93 9f       	mul	r25, r19
     a66:	81 2d       	mov	r24, r1
     a68:	11 24       	eor	r1, r1
     a6a:	86 95       	lsr	r24
     a6c:	86 95       	lsr	r24
     a6e:	86 95       	lsr	r24
     a70:	88 0f       	add	r24, r24
     a72:	28 2f       	mov	r18, r24
     a74:	22 0f       	add	r18, r18
     a76:	22 0f       	add	r18, r18
     a78:	82 0f       	add	r24, r18
     a7a:	98 1b       	sub	r25, r24
     a7c:	99 83       	std	Y+1, r25	; 0x01
		date[1]=second/10;
     a7e:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <second>
     a82:	83 9f       	mul	r24, r19
     a84:	81 2d       	mov	r24, r1
     a86:	11 24       	eor	r1, r1
     a88:	86 95       	lsr	r24
     a8a:	86 95       	lsr	r24
     a8c:	86 95       	lsr	r24
     a8e:	8a 83       	std	Y+2, r24	; 0x02
		date[2]=mint%10;
     a90:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__data_end>
     a94:	87 e6       	ldi	r24, 0x67	; 103
     a96:	28 02       	muls	r18, r24
     a98:	91 2d       	mov	r25, r1
     a9a:	11 24       	eor	r1, r1
     a9c:	95 95       	asr	r25
     a9e:	95 95       	asr	r25
     aa0:	27 fd       	sbrc	r18, 7
     aa2:	93 95       	inc	r25
     aa4:	49 2f       	mov	r20, r25
     aa6:	44 0f       	add	r20, r20
     aa8:	34 2f       	mov	r19, r20
     aaa:	33 0f       	add	r19, r19
     aac:	33 0f       	add	r19, r19
     aae:	34 0f       	add	r19, r20
     ab0:	23 1b       	sub	r18, r19
     ab2:	2b 83       	std	Y+3, r18	; 0x03
		date[3]=mint/10;
     ab4:	9c 83       	std	Y+4, r25	; 0x04
		date[4]=hours%10;
     ab6:	90 91 bd 00 	lds	r25, 0x00BD	; 0x8000bd <hours>
     aba:	98 02       	muls	r25, r24
     abc:	81 2d       	mov	r24, r1
     abe:	11 24       	eor	r1, r1
     ac0:	85 95       	asr	r24
     ac2:	85 95       	asr	r24
     ac4:	97 fd       	sbrc	r25, 7
     ac6:	83 95       	inc	r24
     ac8:	38 2f       	mov	r19, r24
     aca:	33 0f       	add	r19, r19
     acc:	23 2f       	mov	r18, r19
     ace:	22 0f       	add	r18, r18
     ad0:	22 0f       	add	r18, r18
     ad2:	23 0f       	add	r18, r19
     ad4:	92 1b       	sub	r25, r18
     ad6:	9d 83       	std	Y+5, r25	; 0x05
		date[5]=hours/10;
     ad8:	8e 83       	std	Y+6, r24	; 0x06
		
		for (int8_t i=0;i<6;i++)
     ada:	10 e0       	ldi	r17, 0x00	; 0
     adc:	22 c0       	rjmp	.+68     	; 0xb22 <main+0x32e>
		{
			PORTC = PORTC | 0b00111111;
     ade:	85 b3       	in	r24, 0x15	; 21
     ae0:	8f 63       	ori	r24, 0x3F	; 63
     ae2:	85 bb       	out	0x15, r24	; 21
			CLR_BIT(PORTC,i);
     ae4:	25 b3       	in	r18, 0x15	; 21
     ae6:	81 e0       	ldi	r24, 0x01	; 1
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	01 2e       	mov	r0, r17
     aec:	02 c0       	rjmp	.+4      	; 0xaf2 <main+0x2fe>
     aee:	88 0f       	add	r24, r24
     af0:	99 1f       	adc	r25, r25
     af2:	0a 94       	dec	r0
     af4:	e2 f7       	brpl	.-8      	; 0xaee <main+0x2fa>
     af6:	80 95       	com	r24
     af8:	82 23       	and	r24, r18
     afa:	85 bb       	out	0x15, r24	; 21
			seven_seg_write('D',date[i]);
     afc:	e1 e0       	ldi	r30, 0x01	; 1
     afe:	f0 e0       	ldi	r31, 0x00	; 0
     b00:	ec 0f       	add	r30, r28
     b02:	fd 1f       	adc	r31, r29
     b04:	e1 0f       	add	r30, r17
     b06:	f1 1d       	adc	r31, r1
     b08:	17 fd       	sbrc	r17, 7
     b0a:	fa 95       	dec	r31
     b0c:	60 81       	ld	r22, Z
     b0e:	84 e4       	ldi	r24, 0x44	; 68
     b10:	0e 94 01 01 	call	0x202	; 0x202 <seven_seg_write>
     b14:	8f e0       	ldi	r24, 0x0F	; 15
     b16:	97 e2       	ldi	r25, 0x27	; 39
     b18:	01 97       	sbiw	r24, 0x01	; 1
     b1a:	f1 f7       	brne	.-4      	; 0xb18 <main+0x324>
     b1c:	00 c0       	rjmp	.+0      	; 0xb1e <main+0x32a>
     b1e:	00 00       	nop
		date[2]=mint%10;
		date[3]=mint/10;
		date[4]=hours%10;
		date[5]=hours/10;
		
		for (int8_t i=0;i<6;i++)
     b20:	1f 5f       	subi	r17, 0xFF	; 255
     b22:	16 30       	cpi	r17, 0x06	; 6
     b24:	e4 f2       	brlt	.-72     	; 0xade <main+0x2ea>
     b26:	83 ce       	rjmp	.-762    	; 0x82e <main+0x3a>

00000b28 <__vector_4>:
		}
    }
}

ISR(TIMER2_OVF_vect)
{
     b28:	1f 92       	push	r1
     b2a:	0f 92       	push	r0
     b2c:	0f b6       	in	r0, 0x3f	; 63
     b2e:	0f 92       	push	r0
     b30:	11 24       	eor	r1, r1
     b32:	8f 93       	push	r24
	if (allow)
     b34:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     b38:	88 23       	and	r24, r24
     b3a:	29 f0       	breq	.+10     	; 0xb46 <__vector_4+0x1e>
	{
		second++;
     b3c:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <second>
     b40:	8f 5f       	subi	r24, 0xFF	; 255
     b42:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <second>
	}
}
     b46:	8f 91       	pop	r24
     b48:	0f 90       	pop	r0
     b4a:	0f be       	out	0x3f, r0	; 63
     b4c:	0f 90       	pop	r0
     b4e:	1f 90       	pop	r1
     b50:	18 95       	reti

00000b52 <timer2_ovf_init_>:
#include <avr/interrupt.h>

void timer2_ovf_init_()
{
	//ENABLE EXTRNAL CLOCK 
	SET_BIT(ASSR,AS2);
     b52:	82 b5       	in	r24, 0x22	; 34
     b54:	88 60       	ori	r24, 0x08	; 8
     b56:	82 bd       	out	0x22, r24	; 34
	//PRESCALAR 128
	SET_BIT(TCCR2,CS20);
     b58:	85 b5       	in	r24, 0x25	; 37
     b5a:	81 60       	ori	r24, 0x01	; 1
     b5c:	85 bd       	out	0x25, r24	; 37
	SET_BIT(TCCR2,CS22);
     b5e:	85 b5       	in	r24, 0x25	; 37
     b60:	84 60       	ori	r24, 0x04	; 4
     b62:	85 bd       	out	0x25, r24	; 37
	//ENABLE INTRUPT
	sei();
     b64:	78 94       	sei
	//ENABLE OVERFLOW INTERPUT IN TIMER2
	SET_BIT(TIMSK,TOIE2);
     b66:	89 b7       	in	r24, 0x39	; 57
     b68:	80 64       	ori	r24, 0x40	; 64
     b6a:	89 bf       	out	0x39, r24	; 57
     b6c:	08 95       	ret

00000b6e <__tablejump2__>:
     b6e:	ee 0f       	add	r30, r30
     b70:	ff 1f       	adc	r31, r31
     b72:	05 90       	lpm	r0, Z+
     b74:	f4 91       	lpm	r31, Z
     b76:	e0 2d       	mov	r30, r0
     b78:	09 94       	ijmp

00000b7a <printf>:
     b7a:	a0 e0       	ldi	r26, 0x00	; 0
     b7c:	b0 e0       	ldi	r27, 0x00	; 0
     b7e:	e3 ec       	ldi	r30, 0xC3	; 195
     b80:	f5 e0       	ldi	r31, 0x05	; 5
     b82:	0c 94 74 08 	jmp	0x10e8	; 0x10e8 <__prologue_saves__+0x20>
     b86:	ae 01       	movw	r20, r28
     b88:	4b 5f       	subi	r20, 0xFB	; 251
     b8a:	5f 4f       	sbci	r21, 0xFF	; 255
     b8c:	fa 01       	movw	r30, r20
     b8e:	61 91       	ld	r22, Z+
     b90:	71 91       	ld	r23, Z+
     b92:	af 01       	movw	r20, r30
     b94:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__iob+0x2>
     b98:	90 91 c2 00 	lds	r25, 0x00C2	; 0x8000c2 <__iob+0x3>
     b9c:	0e 94 d3 05 	call	0xba6	; 0xba6 <vfprintf>
     ba0:	e2 e0       	ldi	r30, 0x02	; 2
     ba2:	0c 94 90 08 	jmp	0x1120	; 0x1120 <__epilogue_restores__+0x20>

00000ba6 <vfprintf>:
     ba6:	ab e0       	ldi	r26, 0x0B	; 11
     ba8:	b0 e0       	ldi	r27, 0x00	; 0
     baa:	e9 ed       	ldi	r30, 0xD9	; 217
     bac:	f5 e0       	ldi	r31, 0x05	; 5
     bae:	0c 94 64 08 	jmp	0x10c8	; 0x10c8 <__prologue_saves__>
     bb2:	6c 01       	movw	r12, r24
     bb4:	7b 01       	movw	r14, r22
     bb6:	8a 01       	movw	r16, r20
     bb8:	fc 01       	movw	r30, r24
     bba:	17 82       	std	Z+7, r1	; 0x07
     bbc:	16 82       	std	Z+6, r1	; 0x06
     bbe:	83 81       	ldd	r24, Z+3	; 0x03
     bc0:	81 ff       	sbrs	r24, 1
     bc2:	cc c1       	rjmp	.+920    	; 0xf5c <vfprintf+0x3b6>
     bc4:	ce 01       	movw	r24, r28
     bc6:	01 96       	adiw	r24, 0x01	; 1
     bc8:	3c 01       	movw	r6, r24
     bca:	f6 01       	movw	r30, r12
     bcc:	93 81       	ldd	r25, Z+3	; 0x03
     bce:	f7 01       	movw	r30, r14
     bd0:	93 fd       	sbrc	r25, 3
     bd2:	85 91       	lpm	r24, Z+
     bd4:	93 ff       	sbrs	r25, 3
     bd6:	81 91       	ld	r24, Z+
     bd8:	7f 01       	movw	r14, r30
     bda:	88 23       	and	r24, r24
     bdc:	09 f4       	brne	.+2      	; 0xbe0 <vfprintf+0x3a>
     bde:	ba c1       	rjmp	.+884    	; 0xf54 <vfprintf+0x3ae>
     be0:	85 32       	cpi	r24, 0x25	; 37
     be2:	39 f4       	brne	.+14     	; 0xbf2 <vfprintf+0x4c>
     be4:	93 fd       	sbrc	r25, 3
     be6:	85 91       	lpm	r24, Z+
     be8:	93 ff       	sbrs	r25, 3
     bea:	81 91       	ld	r24, Z+
     bec:	7f 01       	movw	r14, r30
     bee:	85 32       	cpi	r24, 0x25	; 37
     bf0:	29 f4       	brne	.+10     	; 0xbfc <vfprintf+0x56>
     bf2:	b6 01       	movw	r22, r12
     bf4:	90 e0       	ldi	r25, 0x00	; 0
     bf6:	0e 94 ca 07 	call	0xf94	; 0xf94 <fputc>
     bfa:	e7 cf       	rjmp	.-50     	; 0xbca <vfprintf+0x24>
     bfc:	91 2c       	mov	r9, r1
     bfe:	21 2c       	mov	r2, r1
     c00:	31 2c       	mov	r3, r1
     c02:	ff e1       	ldi	r31, 0x1F	; 31
     c04:	f3 15       	cp	r31, r3
     c06:	d8 f0       	brcs	.+54     	; 0xc3e <vfprintf+0x98>
     c08:	8b 32       	cpi	r24, 0x2B	; 43
     c0a:	79 f0       	breq	.+30     	; 0xc2a <vfprintf+0x84>
     c0c:	38 f4       	brcc	.+14     	; 0xc1c <vfprintf+0x76>
     c0e:	80 32       	cpi	r24, 0x20	; 32
     c10:	79 f0       	breq	.+30     	; 0xc30 <vfprintf+0x8a>
     c12:	83 32       	cpi	r24, 0x23	; 35
     c14:	a1 f4       	brne	.+40     	; 0xc3e <vfprintf+0x98>
     c16:	23 2d       	mov	r18, r3
     c18:	20 61       	ori	r18, 0x10	; 16
     c1a:	1d c0       	rjmp	.+58     	; 0xc56 <vfprintf+0xb0>
     c1c:	8d 32       	cpi	r24, 0x2D	; 45
     c1e:	61 f0       	breq	.+24     	; 0xc38 <vfprintf+0x92>
     c20:	80 33       	cpi	r24, 0x30	; 48
     c22:	69 f4       	brne	.+26     	; 0xc3e <vfprintf+0x98>
     c24:	23 2d       	mov	r18, r3
     c26:	21 60       	ori	r18, 0x01	; 1
     c28:	16 c0       	rjmp	.+44     	; 0xc56 <vfprintf+0xb0>
     c2a:	83 2d       	mov	r24, r3
     c2c:	82 60       	ori	r24, 0x02	; 2
     c2e:	38 2e       	mov	r3, r24
     c30:	e3 2d       	mov	r30, r3
     c32:	e4 60       	ori	r30, 0x04	; 4
     c34:	3e 2e       	mov	r3, r30
     c36:	2a c0       	rjmp	.+84     	; 0xc8c <vfprintf+0xe6>
     c38:	f3 2d       	mov	r31, r3
     c3a:	f8 60       	ori	r31, 0x08	; 8
     c3c:	1d c0       	rjmp	.+58     	; 0xc78 <vfprintf+0xd2>
     c3e:	37 fc       	sbrc	r3, 7
     c40:	2d c0       	rjmp	.+90     	; 0xc9c <vfprintf+0xf6>
     c42:	20 ed       	ldi	r18, 0xD0	; 208
     c44:	28 0f       	add	r18, r24
     c46:	2a 30       	cpi	r18, 0x0A	; 10
     c48:	40 f0       	brcs	.+16     	; 0xc5a <vfprintf+0xb4>
     c4a:	8e 32       	cpi	r24, 0x2E	; 46
     c4c:	b9 f4       	brne	.+46     	; 0xc7c <vfprintf+0xd6>
     c4e:	36 fc       	sbrc	r3, 6
     c50:	81 c1       	rjmp	.+770    	; 0xf54 <vfprintf+0x3ae>
     c52:	23 2d       	mov	r18, r3
     c54:	20 64       	ori	r18, 0x40	; 64
     c56:	32 2e       	mov	r3, r18
     c58:	19 c0       	rjmp	.+50     	; 0xc8c <vfprintf+0xe6>
     c5a:	36 fe       	sbrs	r3, 6
     c5c:	06 c0       	rjmp	.+12     	; 0xc6a <vfprintf+0xc4>
     c5e:	8a e0       	ldi	r24, 0x0A	; 10
     c60:	98 9e       	mul	r9, r24
     c62:	20 0d       	add	r18, r0
     c64:	11 24       	eor	r1, r1
     c66:	92 2e       	mov	r9, r18
     c68:	11 c0       	rjmp	.+34     	; 0xc8c <vfprintf+0xe6>
     c6a:	ea e0       	ldi	r30, 0x0A	; 10
     c6c:	2e 9e       	mul	r2, r30
     c6e:	20 0d       	add	r18, r0
     c70:	11 24       	eor	r1, r1
     c72:	22 2e       	mov	r2, r18
     c74:	f3 2d       	mov	r31, r3
     c76:	f0 62       	ori	r31, 0x20	; 32
     c78:	3f 2e       	mov	r3, r31
     c7a:	08 c0       	rjmp	.+16     	; 0xc8c <vfprintf+0xe6>
     c7c:	8c 36       	cpi	r24, 0x6C	; 108
     c7e:	21 f4       	brne	.+8      	; 0xc88 <vfprintf+0xe2>
     c80:	83 2d       	mov	r24, r3
     c82:	80 68       	ori	r24, 0x80	; 128
     c84:	38 2e       	mov	r3, r24
     c86:	02 c0       	rjmp	.+4      	; 0xc8c <vfprintf+0xe6>
     c88:	88 36       	cpi	r24, 0x68	; 104
     c8a:	41 f4       	brne	.+16     	; 0xc9c <vfprintf+0xf6>
     c8c:	f7 01       	movw	r30, r14
     c8e:	93 fd       	sbrc	r25, 3
     c90:	85 91       	lpm	r24, Z+
     c92:	93 ff       	sbrs	r25, 3
     c94:	81 91       	ld	r24, Z+
     c96:	7f 01       	movw	r14, r30
     c98:	81 11       	cpse	r24, r1
     c9a:	b3 cf       	rjmp	.-154    	; 0xc02 <vfprintf+0x5c>
     c9c:	98 2f       	mov	r25, r24
     c9e:	9f 7d       	andi	r25, 0xDF	; 223
     ca0:	95 54       	subi	r25, 0x45	; 69
     ca2:	93 30       	cpi	r25, 0x03	; 3
     ca4:	28 f4       	brcc	.+10     	; 0xcb0 <vfprintf+0x10a>
     ca6:	0c 5f       	subi	r16, 0xFC	; 252
     ca8:	1f 4f       	sbci	r17, 0xFF	; 255
     caa:	9f e3       	ldi	r25, 0x3F	; 63
     cac:	99 83       	std	Y+1, r25	; 0x01
     cae:	0d c0       	rjmp	.+26     	; 0xcca <vfprintf+0x124>
     cb0:	83 36       	cpi	r24, 0x63	; 99
     cb2:	31 f0       	breq	.+12     	; 0xcc0 <vfprintf+0x11a>
     cb4:	83 37       	cpi	r24, 0x73	; 115
     cb6:	71 f0       	breq	.+28     	; 0xcd4 <vfprintf+0x12e>
     cb8:	83 35       	cpi	r24, 0x53	; 83
     cba:	09 f0       	breq	.+2      	; 0xcbe <vfprintf+0x118>
     cbc:	59 c0       	rjmp	.+178    	; 0xd70 <vfprintf+0x1ca>
     cbe:	21 c0       	rjmp	.+66     	; 0xd02 <vfprintf+0x15c>
     cc0:	f8 01       	movw	r30, r16
     cc2:	80 81       	ld	r24, Z
     cc4:	89 83       	std	Y+1, r24	; 0x01
     cc6:	0e 5f       	subi	r16, 0xFE	; 254
     cc8:	1f 4f       	sbci	r17, 0xFF	; 255
     cca:	88 24       	eor	r8, r8
     ccc:	83 94       	inc	r8
     cce:	91 2c       	mov	r9, r1
     cd0:	53 01       	movw	r10, r6
     cd2:	13 c0       	rjmp	.+38     	; 0xcfa <vfprintf+0x154>
     cd4:	28 01       	movw	r4, r16
     cd6:	f2 e0       	ldi	r31, 0x02	; 2
     cd8:	4f 0e       	add	r4, r31
     cda:	51 1c       	adc	r5, r1
     cdc:	f8 01       	movw	r30, r16
     cde:	a0 80       	ld	r10, Z
     ce0:	b1 80       	ldd	r11, Z+1	; 0x01
     ce2:	36 fe       	sbrs	r3, 6
     ce4:	03 c0       	rjmp	.+6      	; 0xcec <vfprintf+0x146>
     ce6:	69 2d       	mov	r22, r9
     ce8:	70 e0       	ldi	r23, 0x00	; 0
     cea:	02 c0       	rjmp	.+4      	; 0xcf0 <vfprintf+0x14a>
     cec:	6f ef       	ldi	r22, 0xFF	; 255
     cee:	7f ef       	ldi	r23, 0xFF	; 255
     cf0:	c5 01       	movw	r24, r10
     cf2:	0e 94 bf 07 	call	0xf7e	; 0xf7e <strnlen>
     cf6:	4c 01       	movw	r8, r24
     cf8:	82 01       	movw	r16, r4
     cfa:	f3 2d       	mov	r31, r3
     cfc:	ff 77       	andi	r31, 0x7F	; 127
     cfe:	3f 2e       	mov	r3, r31
     d00:	16 c0       	rjmp	.+44     	; 0xd2e <vfprintf+0x188>
     d02:	28 01       	movw	r4, r16
     d04:	22 e0       	ldi	r18, 0x02	; 2
     d06:	42 0e       	add	r4, r18
     d08:	51 1c       	adc	r5, r1
     d0a:	f8 01       	movw	r30, r16
     d0c:	a0 80       	ld	r10, Z
     d0e:	b1 80       	ldd	r11, Z+1	; 0x01
     d10:	36 fe       	sbrs	r3, 6
     d12:	03 c0       	rjmp	.+6      	; 0xd1a <vfprintf+0x174>
     d14:	69 2d       	mov	r22, r9
     d16:	70 e0       	ldi	r23, 0x00	; 0
     d18:	02 c0       	rjmp	.+4      	; 0xd1e <vfprintf+0x178>
     d1a:	6f ef       	ldi	r22, 0xFF	; 255
     d1c:	7f ef       	ldi	r23, 0xFF	; 255
     d1e:	c5 01       	movw	r24, r10
     d20:	0e 94 b4 07 	call	0xf68	; 0xf68 <strnlen_P>
     d24:	4c 01       	movw	r8, r24
     d26:	f3 2d       	mov	r31, r3
     d28:	f0 68       	ori	r31, 0x80	; 128
     d2a:	3f 2e       	mov	r3, r31
     d2c:	82 01       	movw	r16, r4
     d2e:	33 fc       	sbrc	r3, 3
     d30:	1b c0       	rjmp	.+54     	; 0xd68 <vfprintf+0x1c2>
     d32:	82 2d       	mov	r24, r2
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	88 16       	cp	r8, r24
     d38:	99 06       	cpc	r9, r25
     d3a:	b0 f4       	brcc	.+44     	; 0xd68 <vfprintf+0x1c2>
     d3c:	b6 01       	movw	r22, r12
     d3e:	80 e2       	ldi	r24, 0x20	; 32
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	0e 94 ca 07 	call	0xf94	; 0xf94 <fputc>
     d46:	2a 94       	dec	r2
     d48:	f4 cf       	rjmp	.-24     	; 0xd32 <vfprintf+0x18c>
     d4a:	f5 01       	movw	r30, r10
     d4c:	37 fc       	sbrc	r3, 7
     d4e:	85 91       	lpm	r24, Z+
     d50:	37 fe       	sbrs	r3, 7
     d52:	81 91       	ld	r24, Z+
     d54:	5f 01       	movw	r10, r30
     d56:	b6 01       	movw	r22, r12
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	0e 94 ca 07 	call	0xf94	; 0xf94 <fputc>
     d5e:	21 10       	cpse	r2, r1
     d60:	2a 94       	dec	r2
     d62:	21 e0       	ldi	r18, 0x01	; 1
     d64:	82 1a       	sub	r8, r18
     d66:	91 08       	sbc	r9, r1
     d68:	81 14       	cp	r8, r1
     d6a:	91 04       	cpc	r9, r1
     d6c:	71 f7       	brne	.-36     	; 0xd4a <vfprintf+0x1a4>
     d6e:	e8 c0       	rjmp	.+464    	; 0xf40 <vfprintf+0x39a>
     d70:	84 36       	cpi	r24, 0x64	; 100
     d72:	11 f0       	breq	.+4      	; 0xd78 <vfprintf+0x1d2>
     d74:	89 36       	cpi	r24, 0x69	; 105
     d76:	41 f5       	brne	.+80     	; 0xdc8 <vfprintf+0x222>
     d78:	f8 01       	movw	r30, r16
     d7a:	37 fe       	sbrs	r3, 7
     d7c:	07 c0       	rjmp	.+14     	; 0xd8c <vfprintf+0x1e6>
     d7e:	60 81       	ld	r22, Z
     d80:	71 81       	ldd	r23, Z+1	; 0x01
     d82:	82 81       	ldd	r24, Z+2	; 0x02
     d84:	93 81       	ldd	r25, Z+3	; 0x03
     d86:	0c 5f       	subi	r16, 0xFC	; 252
     d88:	1f 4f       	sbci	r17, 0xFF	; 255
     d8a:	08 c0       	rjmp	.+16     	; 0xd9c <vfprintf+0x1f6>
     d8c:	60 81       	ld	r22, Z
     d8e:	71 81       	ldd	r23, Z+1	; 0x01
     d90:	07 2e       	mov	r0, r23
     d92:	00 0c       	add	r0, r0
     d94:	88 0b       	sbc	r24, r24
     d96:	99 0b       	sbc	r25, r25
     d98:	0e 5f       	subi	r16, 0xFE	; 254
     d9a:	1f 4f       	sbci	r17, 0xFF	; 255
     d9c:	f3 2d       	mov	r31, r3
     d9e:	ff 76       	andi	r31, 0x6F	; 111
     da0:	3f 2e       	mov	r3, r31
     da2:	97 ff       	sbrs	r25, 7
     da4:	09 c0       	rjmp	.+18     	; 0xdb8 <vfprintf+0x212>
     da6:	90 95       	com	r25
     da8:	80 95       	com	r24
     daa:	70 95       	com	r23
     dac:	61 95       	neg	r22
     dae:	7f 4f       	sbci	r23, 0xFF	; 255
     db0:	8f 4f       	sbci	r24, 0xFF	; 255
     db2:	9f 4f       	sbci	r25, 0xFF	; 255
     db4:	f0 68       	ori	r31, 0x80	; 128
     db6:	3f 2e       	mov	r3, r31
     db8:	2a e0       	ldi	r18, 0x0A	; 10
     dba:	30 e0       	ldi	r19, 0x00	; 0
     dbc:	a3 01       	movw	r20, r6
     dbe:	0e 94 06 08 	call	0x100c	; 0x100c <__ultoa_invert>
     dc2:	88 2e       	mov	r8, r24
     dc4:	86 18       	sub	r8, r6
     dc6:	45 c0       	rjmp	.+138    	; 0xe52 <vfprintf+0x2ac>
     dc8:	85 37       	cpi	r24, 0x75	; 117
     dca:	31 f4       	brne	.+12     	; 0xdd8 <vfprintf+0x232>
     dcc:	23 2d       	mov	r18, r3
     dce:	2f 7e       	andi	r18, 0xEF	; 239
     dd0:	b2 2e       	mov	r11, r18
     dd2:	2a e0       	ldi	r18, 0x0A	; 10
     dd4:	30 e0       	ldi	r19, 0x00	; 0
     dd6:	25 c0       	rjmp	.+74     	; 0xe22 <vfprintf+0x27c>
     dd8:	93 2d       	mov	r25, r3
     dda:	99 7f       	andi	r25, 0xF9	; 249
     ddc:	b9 2e       	mov	r11, r25
     dde:	8f 36       	cpi	r24, 0x6F	; 111
     de0:	c1 f0       	breq	.+48     	; 0xe12 <vfprintf+0x26c>
     de2:	18 f4       	brcc	.+6      	; 0xdea <vfprintf+0x244>
     de4:	88 35       	cpi	r24, 0x58	; 88
     de6:	79 f0       	breq	.+30     	; 0xe06 <vfprintf+0x260>
     de8:	b5 c0       	rjmp	.+362    	; 0xf54 <vfprintf+0x3ae>
     dea:	80 37       	cpi	r24, 0x70	; 112
     dec:	19 f0       	breq	.+6      	; 0xdf4 <vfprintf+0x24e>
     dee:	88 37       	cpi	r24, 0x78	; 120
     df0:	21 f0       	breq	.+8      	; 0xdfa <vfprintf+0x254>
     df2:	b0 c0       	rjmp	.+352    	; 0xf54 <vfprintf+0x3ae>
     df4:	e9 2f       	mov	r30, r25
     df6:	e0 61       	ori	r30, 0x10	; 16
     df8:	be 2e       	mov	r11, r30
     dfa:	b4 fe       	sbrs	r11, 4
     dfc:	0d c0       	rjmp	.+26     	; 0xe18 <vfprintf+0x272>
     dfe:	fb 2d       	mov	r31, r11
     e00:	f4 60       	ori	r31, 0x04	; 4
     e02:	bf 2e       	mov	r11, r31
     e04:	09 c0       	rjmp	.+18     	; 0xe18 <vfprintf+0x272>
     e06:	34 fe       	sbrs	r3, 4
     e08:	0a c0       	rjmp	.+20     	; 0xe1e <vfprintf+0x278>
     e0a:	29 2f       	mov	r18, r25
     e0c:	26 60       	ori	r18, 0x06	; 6
     e0e:	b2 2e       	mov	r11, r18
     e10:	06 c0       	rjmp	.+12     	; 0xe1e <vfprintf+0x278>
     e12:	28 e0       	ldi	r18, 0x08	; 8
     e14:	30 e0       	ldi	r19, 0x00	; 0
     e16:	05 c0       	rjmp	.+10     	; 0xe22 <vfprintf+0x27c>
     e18:	20 e1       	ldi	r18, 0x10	; 16
     e1a:	30 e0       	ldi	r19, 0x00	; 0
     e1c:	02 c0       	rjmp	.+4      	; 0xe22 <vfprintf+0x27c>
     e1e:	20 e1       	ldi	r18, 0x10	; 16
     e20:	32 e0       	ldi	r19, 0x02	; 2
     e22:	f8 01       	movw	r30, r16
     e24:	b7 fe       	sbrs	r11, 7
     e26:	07 c0       	rjmp	.+14     	; 0xe36 <vfprintf+0x290>
     e28:	60 81       	ld	r22, Z
     e2a:	71 81       	ldd	r23, Z+1	; 0x01
     e2c:	82 81       	ldd	r24, Z+2	; 0x02
     e2e:	93 81       	ldd	r25, Z+3	; 0x03
     e30:	0c 5f       	subi	r16, 0xFC	; 252
     e32:	1f 4f       	sbci	r17, 0xFF	; 255
     e34:	06 c0       	rjmp	.+12     	; 0xe42 <vfprintf+0x29c>
     e36:	60 81       	ld	r22, Z
     e38:	71 81       	ldd	r23, Z+1	; 0x01
     e3a:	80 e0       	ldi	r24, 0x00	; 0
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	0e 5f       	subi	r16, 0xFE	; 254
     e40:	1f 4f       	sbci	r17, 0xFF	; 255
     e42:	a3 01       	movw	r20, r6
     e44:	0e 94 06 08 	call	0x100c	; 0x100c <__ultoa_invert>
     e48:	88 2e       	mov	r8, r24
     e4a:	86 18       	sub	r8, r6
     e4c:	fb 2d       	mov	r31, r11
     e4e:	ff 77       	andi	r31, 0x7F	; 127
     e50:	3f 2e       	mov	r3, r31
     e52:	36 fe       	sbrs	r3, 6
     e54:	0d c0       	rjmp	.+26     	; 0xe70 <vfprintf+0x2ca>
     e56:	23 2d       	mov	r18, r3
     e58:	2e 7f       	andi	r18, 0xFE	; 254
     e5a:	a2 2e       	mov	r10, r18
     e5c:	89 14       	cp	r8, r9
     e5e:	58 f4       	brcc	.+22     	; 0xe76 <vfprintf+0x2d0>
     e60:	34 fe       	sbrs	r3, 4
     e62:	0b c0       	rjmp	.+22     	; 0xe7a <vfprintf+0x2d4>
     e64:	32 fc       	sbrc	r3, 2
     e66:	09 c0       	rjmp	.+18     	; 0xe7a <vfprintf+0x2d4>
     e68:	83 2d       	mov	r24, r3
     e6a:	8e 7e       	andi	r24, 0xEE	; 238
     e6c:	a8 2e       	mov	r10, r24
     e6e:	05 c0       	rjmp	.+10     	; 0xe7a <vfprintf+0x2d4>
     e70:	b8 2c       	mov	r11, r8
     e72:	a3 2c       	mov	r10, r3
     e74:	03 c0       	rjmp	.+6      	; 0xe7c <vfprintf+0x2d6>
     e76:	b8 2c       	mov	r11, r8
     e78:	01 c0       	rjmp	.+2      	; 0xe7c <vfprintf+0x2d6>
     e7a:	b9 2c       	mov	r11, r9
     e7c:	a4 fe       	sbrs	r10, 4
     e7e:	0f c0       	rjmp	.+30     	; 0xe9e <vfprintf+0x2f8>
     e80:	fe 01       	movw	r30, r28
     e82:	e8 0d       	add	r30, r8
     e84:	f1 1d       	adc	r31, r1
     e86:	80 81       	ld	r24, Z
     e88:	80 33       	cpi	r24, 0x30	; 48
     e8a:	21 f4       	brne	.+8      	; 0xe94 <vfprintf+0x2ee>
     e8c:	9a 2d       	mov	r25, r10
     e8e:	99 7e       	andi	r25, 0xE9	; 233
     e90:	a9 2e       	mov	r10, r25
     e92:	09 c0       	rjmp	.+18     	; 0xea6 <vfprintf+0x300>
     e94:	a2 fe       	sbrs	r10, 2
     e96:	06 c0       	rjmp	.+12     	; 0xea4 <vfprintf+0x2fe>
     e98:	b3 94       	inc	r11
     e9a:	b3 94       	inc	r11
     e9c:	04 c0       	rjmp	.+8      	; 0xea6 <vfprintf+0x300>
     e9e:	8a 2d       	mov	r24, r10
     ea0:	86 78       	andi	r24, 0x86	; 134
     ea2:	09 f0       	breq	.+2      	; 0xea6 <vfprintf+0x300>
     ea4:	b3 94       	inc	r11
     ea6:	a3 fc       	sbrc	r10, 3
     ea8:	11 c0       	rjmp	.+34     	; 0xecc <vfprintf+0x326>
     eaa:	a0 fe       	sbrs	r10, 0
     eac:	06 c0       	rjmp	.+12     	; 0xeba <vfprintf+0x314>
     eae:	b2 14       	cp	r11, r2
     eb0:	88 f4       	brcc	.+34     	; 0xed4 <vfprintf+0x32e>
     eb2:	28 0c       	add	r2, r8
     eb4:	92 2c       	mov	r9, r2
     eb6:	9b 18       	sub	r9, r11
     eb8:	0e c0       	rjmp	.+28     	; 0xed6 <vfprintf+0x330>
     eba:	b2 14       	cp	r11, r2
     ebc:	60 f4       	brcc	.+24     	; 0xed6 <vfprintf+0x330>
     ebe:	b6 01       	movw	r22, r12
     ec0:	80 e2       	ldi	r24, 0x20	; 32
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	0e 94 ca 07 	call	0xf94	; 0xf94 <fputc>
     ec8:	b3 94       	inc	r11
     eca:	f7 cf       	rjmp	.-18     	; 0xeba <vfprintf+0x314>
     ecc:	b2 14       	cp	r11, r2
     ece:	18 f4       	brcc	.+6      	; 0xed6 <vfprintf+0x330>
     ed0:	2b 18       	sub	r2, r11
     ed2:	02 c0       	rjmp	.+4      	; 0xed8 <vfprintf+0x332>
     ed4:	98 2c       	mov	r9, r8
     ed6:	21 2c       	mov	r2, r1
     ed8:	a4 fe       	sbrs	r10, 4
     eda:	10 c0       	rjmp	.+32     	; 0xefc <vfprintf+0x356>
     edc:	b6 01       	movw	r22, r12
     ede:	80 e3       	ldi	r24, 0x30	; 48
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	0e 94 ca 07 	call	0xf94	; 0xf94 <fputc>
     ee6:	a2 fe       	sbrs	r10, 2
     ee8:	17 c0       	rjmp	.+46     	; 0xf18 <vfprintf+0x372>
     eea:	a1 fc       	sbrc	r10, 1
     eec:	03 c0       	rjmp	.+6      	; 0xef4 <vfprintf+0x34e>
     eee:	88 e7       	ldi	r24, 0x78	; 120
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	02 c0       	rjmp	.+4      	; 0xef8 <vfprintf+0x352>
     ef4:	88 e5       	ldi	r24, 0x58	; 88
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	b6 01       	movw	r22, r12
     efa:	0c c0       	rjmp	.+24     	; 0xf14 <vfprintf+0x36e>
     efc:	8a 2d       	mov	r24, r10
     efe:	86 78       	andi	r24, 0x86	; 134
     f00:	59 f0       	breq	.+22     	; 0xf18 <vfprintf+0x372>
     f02:	a1 fe       	sbrs	r10, 1
     f04:	02 c0       	rjmp	.+4      	; 0xf0a <vfprintf+0x364>
     f06:	8b e2       	ldi	r24, 0x2B	; 43
     f08:	01 c0       	rjmp	.+2      	; 0xf0c <vfprintf+0x366>
     f0a:	80 e2       	ldi	r24, 0x20	; 32
     f0c:	a7 fc       	sbrc	r10, 7
     f0e:	8d e2       	ldi	r24, 0x2D	; 45
     f10:	b6 01       	movw	r22, r12
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	0e 94 ca 07 	call	0xf94	; 0xf94 <fputc>
     f18:	89 14       	cp	r8, r9
     f1a:	38 f4       	brcc	.+14     	; 0xf2a <vfprintf+0x384>
     f1c:	b6 01       	movw	r22, r12
     f1e:	80 e3       	ldi	r24, 0x30	; 48
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	0e 94 ca 07 	call	0xf94	; 0xf94 <fputc>
     f26:	9a 94       	dec	r9
     f28:	f7 cf       	rjmp	.-18     	; 0xf18 <vfprintf+0x372>
     f2a:	8a 94       	dec	r8
     f2c:	f3 01       	movw	r30, r6
     f2e:	e8 0d       	add	r30, r8
     f30:	f1 1d       	adc	r31, r1
     f32:	80 81       	ld	r24, Z
     f34:	b6 01       	movw	r22, r12
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	0e 94 ca 07 	call	0xf94	; 0xf94 <fputc>
     f3c:	81 10       	cpse	r8, r1
     f3e:	f5 cf       	rjmp	.-22     	; 0xf2a <vfprintf+0x384>
     f40:	22 20       	and	r2, r2
     f42:	09 f4       	brne	.+2      	; 0xf46 <vfprintf+0x3a0>
     f44:	42 ce       	rjmp	.-892    	; 0xbca <vfprintf+0x24>
     f46:	b6 01       	movw	r22, r12
     f48:	80 e2       	ldi	r24, 0x20	; 32
     f4a:	90 e0       	ldi	r25, 0x00	; 0
     f4c:	0e 94 ca 07 	call	0xf94	; 0xf94 <fputc>
     f50:	2a 94       	dec	r2
     f52:	f6 cf       	rjmp	.-20     	; 0xf40 <vfprintf+0x39a>
     f54:	f6 01       	movw	r30, r12
     f56:	86 81       	ldd	r24, Z+6	; 0x06
     f58:	97 81       	ldd	r25, Z+7	; 0x07
     f5a:	02 c0       	rjmp	.+4      	; 0xf60 <vfprintf+0x3ba>
     f5c:	8f ef       	ldi	r24, 0xFF	; 255
     f5e:	9f ef       	ldi	r25, 0xFF	; 255
     f60:	2b 96       	adiw	r28, 0x0b	; 11
     f62:	e2 e1       	ldi	r30, 0x12	; 18
     f64:	0c 94 80 08 	jmp	0x1100	; 0x1100 <__epilogue_restores__>

00000f68 <strnlen_P>:
     f68:	fc 01       	movw	r30, r24
     f6a:	05 90       	lpm	r0, Z+
     f6c:	61 50       	subi	r22, 0x01	; 1
     f6e:	70 40       	sbci	r23, 0x00	; 0
     f70:	01 10       	cpse	r0, r1
     f72:	d8 f7       	brcc	.-10     	; 0xf6a <strnlen_P+0x2>
     f74:	80 95       	com	r24
     f76:	90 95       	com	r25
     f78:	8e 0f       	add	r24, r30
     f7a:	9f 1f       	adc	r25, r31
     f7c:	08 95       	ret

00000f7e <strnlen>:
     f7e:	fc 01       	movw	r30, r24
     f80:	61 50       	subi	r22, 0x01	; 1
     f82:	70 40       	sbci	r23, 0x00	; 0
     f84:	01 90       	ld	r0, Z+
     f86:	01 10       	cpse	r0, r1
     f88:	d8 f7       	brcc	.-10     	; 0xf80 <strnlen+0x2>
     f8a:	80 95       	com	r24
     f8c:	90 95       	com	r25
     f8e:	8e 0f       	add	r24, r30
     f90:	9f 1f       	adc	r25, r31
     f92:	08 95       	ret

00000f94 <fputc>:
     f94:	0f 93       	push	r16
     f96:	1f 93       	push	r17
     f98:	cf 93       	push	r28
     f9a:	df 93       	push	r29
     f9c:	fb 01       	movw	r30, r22
     f9e:	23 81       	ldd	r18, Z+3	; 0x03
     fa0:	21 fd       	sbrc	r18, 1
     fa2:	03 c0       	rjmp	.+6      	; 0xfaa <fputc+0x16>
     fa4:	8f ef       	ldi	r24, 0xFF	; 255
     fa6:	9f ef       	ldi	r25, 0xFF	; 255
     fa8:	2c c0       	rjmp	.+88     	; 0x1002 <fputc+0x6e>
     faa:	22 ff       	sbrs	r18, 2
     fac:	16 c0       	rjmp	.+44     	; 0xfda <fputc+0x46>
     fae:	46 81       	ldd	r20, Z+6	; 0x06
     fb0:	57 81       	ldd	r21, Z+7	; 0x07
     fb2:	24 81       	ldd	r18, Z+4	; 0x04
     fb4:	35 81       	ldd	r19, Z+5	; 0x05
     fb6:	42 17       	cp	r20, r18
     fb8:	53 07       	cpc	r21, r19
     fba:	44 f4       	brge	.+16     	; 0xfcc <fputc+0x38>
     fbc:	a0 81       	ld	r26, Z
     fbe:	b1 81       	ldd	r27, Z+1	; 0x01
     fc0:	9d 01       	movw	r18, r26
     fc2:	2f 5f       	subi	r18, 0xFF	; 255
     fc4:	3f 4f       	sbci	r19, 0xFF	; 255
     fc6:	31 83       	std	Z+1, r19	; 0x01
     fc8:	20 83       	st	Z, r18
     fca:	8c 93       	st	X, r24
     fcc:	26 81       	ldd	r18, Z+6	; 0x06
     fce:	37 81       	ldd	r19, Z+7	; 0x07
     fd0:	2f 5f       	subi	r18, 0xFF	; 255
     fd2:	3f 4f       	sbci	r19, 0xFF	; 255
     fd4:	37 83       	std	Z+7, r19	; 0x07
     fd6:	26 83       	std	Z+6, r18	; 0x06
     fd8:	14 c0       	rjmp	.+40     	; 0x1002 <fputc+0x6e>
     fda:	8b 01       	movw	r16, r22
     fdc:	ec 01       	movw	r28, r24
     fde:	fb 01       	movw	r30, r22
     fe0:	00 84       	ldd	r0, Z+8	; 0x08
     fe2:	f1 85       	ldd	r31, Z+9	; 0x09
     fe4:	e0 2d       	mov	r30, r0
     fe6:	09 95       	icall
     fe8:	89 2b       	or	r24, r25
     fea:	e1 f6       	brne	.-72     	; 0xfa4 <fputc+0x10>
     fec:	d8 01       	movw	r26, r16
     fee:	16 96       	adiw	r26, 0x06	; 6
     ff0:	8d 91       	ld	r24, X+
     ff2:	9c 91       	ld	r25, X
     ff4:	17 97       	sbiw	r26, 0x07	; 7
     ff6:	01 96       	adiw	r24, 0x01	; 1
     ff8:	17 96       	adiw	r26, 0x07	; 7
     ffa:	9c 93       	st	X, r25
     ffc:	8e 93       	st	-X, r24
     ffe:	16 97       	sbiw	r26, 0x06	; 6
    1000:	ce 01       	movw	r24, r28
    1002:	df 91       	pop	r29
    1004:	cf 91       	pop	r28
    1006:	1f 91       	pop	r17
    1008:	0f 91       	pop	r16
    100a:	08 95       	ret

0000100c <__ultoa_invert>:
    100c:	fa 01       	movw	r30, r20
    100e:	aa 27       	eor	r26, r26
    1010:	28 30       	cpi	r18, 0x08	; 8
    1012:	51 f1       	breq	.+84     	; 0x1068 <__ultoa_invert+0x5c>
    1014:	20 31       	cpi	r18, 0x10	; 16
    1016:	81 f1       	breq	.+96     	; 0x1078 <__ultoa_invert+0x6c>
    1018:	e8 94       	clt
    101a:	6f 93       	push	r22
    101c:	6e 7f       	andi	r22, 0xFE	; 254
    101e:	6e 5f       	subi	r22, 0xFE	; 254
    1020:	7f 4f       	sbci	r23, 0xFF	; 255
    1022:	8f 4f       	sbci	r24, 0xFF	; 255
    1024:	9f 4f       	sbci	r25, 0xFF	; 255
    1026:	af 4f       	sbci	r26, 0xFF	; 255
    1028:	b1 e0       	ldi	r27, 0x01	; 1
    102a:	3e d0       	rcall	.+124    	; 0x10a8 <__ultoa_invert+0x9c>
    102c:	b4 e0       	ldi	r27, 0x04	; 4
    102e:	3c d0       	rcall	.+120    	; 0x10a8 <__ultoa_invert+0x9c>
    1030:	67 0f       	add	r22, r23
    1032:	78 1f       	adc	r23, r24
    1034:	89 1f       	adc	r24, r25
    1036:	9a 1f       	adc	r25, r26
    1038:	a1 1d       	adc	r26, r1
    103a:	68 0f       	add	r22, r24
    103c:	79 1f       	adc	r23, r25
    103e:	8a 1f       	adc	r24, r26
    1040:	91 1d       	adc	r25, r1
    1042:	a1 1d       	adc	r26, r1
    1044:	6a 0f       	add	r22, r26
    1046:	71 1d       	adc	r23, r1
    1048:	81 1d       	adc	r24, r1
    104a:	91 1d       	adc	r25, r1
    104c:	a1 1d       	adc	r26, r1
    104e:	20 d0       	rcall	.+64     	; 0x1090 <__ultoa_invert+0x84>
    1050:	09 f4       	brne	.+2      	; 0x1054 <__ultoa_invert+0x48>
    1052:	68 94       	set
    1054:	3f 91       	pop	r19
    1056:	2a e0       	ldi	r18, 0x0A	; 10
    1058:	26 9f       	mul	r18, r22
    105a:	11 24       	eor	r1, r1
    105c:	30 19       	sub	r19, r0
    105e:	30 5d       	subi	r19, 0xD0	; 208
    1060:	31 93       	st	Z+, r19
    1062:	de f6       	brtc	.-74     	; 0x101a <__ultoa_invert+0xe>
    1064:	cf 01       	movw	r24, r30
    1066:	08 95       	ret
    1068:	46 2f       	mov	r20, r22
    106a:	47 70       	andi	r20, 0x07	; 7
    106c:	40 5d       	subi	r20, 0xD0	; 208
    106e:	41 93       	st	Z+, r20
    1070:	b3 e0       	ldi	r27, 0x03	; 3
    1072:	0f d0       	rcall	.+30     	; 0x1092 <__ultoa_invert+0x86>
    1074:	c9 f7       	brne	.-14     	; 0x1068 <__ultoa_invert+0x5c>
    1076:	f6 cf       	rjmp	.-20     	; 0x1064 <__ultoa_invert+0x58>
    1078:	46 2f       	mov	r20, r22
    107a:	4f 70       	andi	r20, 0x0F	; 15
    107c:	40 5d       	subi	r20, 0xD0	; 208
    107e:	4a 33       	cpi	r20, 0x3A	; 58
    1080:	18 f0       	brcs	.+6      	; 0x1088 <__ultoa_invert+0x7c>
    1082:	49 5d       	subi	r20, 0xD9	; 217
    1084:	31 fd       	sbrc	r19, 1
    1086:	40 52       	subi	r20, 0x20	; 32
    1088:	41 93       	st	Z+, r20
    108a:	02 d0       	rcall	.+4      	; 0x1090 <__ultoa_invert+0x84>
    108c:	a9 f7       	brne	.-22     	; 0x1078 <__ultoa_invert+0x6c>
    108e:	ea cf       	rjmp	.-44     	; 0x1064 <__ultoa_invert+0x58>
    1090:	b4 e0       	ldi	r27, 0x04	; 4
    1092:	a6 95       	lsr	r26
    1094:	97 95       	ror	r25
    1096:	87 95       	ror	r24
    1098:	77 95       	ror	r23
    109a:	67 95       	ror	r22
    109c:	ba 95       	dec	r27
    109e:	c9 f7       	brne	.-14     	; 0x1092 <__ultoa_invert+0x86>
    10a0:	00 97       	sbiw	r24, 0x00	; 0
    10a2:	61 05       	cpc	r22, r1
    10a4:	71 05       	cpc	r23, r1
    10a6:	08 95       	ret
    10a8:	9b 01       	movw	r18, r22
    10aa:	ac 01       	movw	r20, r24
    10ac:	0a 2e       	mov	r0, r26
    10ae:	06 94       	lsr	r0
    10b0:	57 95       	ror	r21
    10b2:	47 95       	ror	r20
    10b4:	37 95       	ror	r19
    10b6:	27 95       	ror	r18
    10b8:	ba 95       	dec	r27
    10ba:	c9 f7       	brne	.-14     	; 0x10ae <__ultoa_invert+0xa2>
    10bc:	62 0f       	add	r22, r18
    10be:	73 1f       	adc	r23, r19
    10c0:	84 1f       	adc	r24, r20
    10c2:	95 1f       	adc	r25, r21
    10c4:	a0 1d       	adc	r26, r0
    10c6:	08 95       	ret

000010c8 <__prologue_saves__>:
    10c8:	2f 92       	push	r2
    10ca:	3f 92       	push	r3
    10cc:	4f 92       	push	r4
    10ce:	5f 92       	push	r5
    10d0:	6f 92       	push	r6
    10d2:	7f 92       	push	r7
    10d4:	8f 92       	push	r8
    10d6:	9f 92       	push	r9
    10d8:	af 92       	push	r10
    10da:	bf 92       	push	r11
    10dc:	cf 92       	push	r12
    10de:	df 92       	push	r13
    10e0:	ef 92       	push	r14
    10e2:	ff 92       	push	r15
    10e4:	0f 93       	push	r16
    10e6:	1f 93       	push	r17
    10e8:	cf 93       	push	r28
    10ea:	df 93       	push	r29
    10ec:	cd b7       	in	r28, 0x3d	; 61
    10ee:	de b7       	in	r29, 0x3e	; 62
    10f0:	ca 1b       	sub	r28, r26
    10f2:	db 0b       	sbc	r29, r27
    10f4:	0f b6       	in	r0, 0x3f	; 63
    10f6:	f8 94       	cli
    10f8:	de bf       	out	0x3e, r29	; 62
    10fa:	0f be       	out	0x3f, r0	; 63
    10fc:	cd bf       	out	0x3d, r28	; 61
    10fe:	09 94       	ijmp

00001100 <__epilogue_restores__>:
    1100:	2a 88       	ldd	r2, Y+18	; 0x12
    1102:	39 88       	ldd	r3, Y+17	; 0x11
    1104:	48 88       	ldd	r4, Y+16	; 0x10
    1106:	5f 84       	ldd	r5, Y+15	; 0x0f
    1108:	6e 84       	ldd	r6, Y+14	; 0x0e
    110a:	7d 84       	ldd	r7, Y+13	; 0x0d
    110c:	8c 84       	ldd	r8, Y+12	; 0x0c
    110e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1110:	aa 84       	ldd	r10, Y+10	; 0x0a
    1112:	b9 84       	ldd	r11, Y+9	; 0x09
    1114:	c8 84       	ldd	r12, Y+8	; 0x08
    1116:	df 80       	ldd	r13, Y+7	; 0x07
    1118:	ee 80       	ldd	r14, Y+6	; 0x06
    111a:	fd 80       	ldd	r15, Y+5	; 0x05
    111c:	0c 81       	ldd	r16, Y+4	; 0x04
    111e:	1b 81       	ldd	r17, Y+3	; 0x03
    1120:	aa 81       	ldd	r26, Y+2	; 0x02
    1122:	b9 81       	ldd	r27, Y+1	; 0x01
    1124:	ce 0f       	add	r28, r30
    1126:	d1 1d       	adc	r29, r1
    1128:	0f b6       	in	r0, 0x3f	; 63
    112a:	f8 94       	cli
    112c:	de bf       	out	0x3e, r29	; 62
    112e:	0f be       	out	0x3f, r0	; 63
    1130:	cd bf       	out	0x3d, r28	; 61
    1132:	ed 01       	movw	r28, r26
    1134:	08 95       	ret

00001136 <_exit>:
    1136:	f8 94       	cli

00001138 <__stop_program>:
    1138:	ff cf       	rjmp	.-2      	; 0x1138 <__stop_program>
